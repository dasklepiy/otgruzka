Процедура ОтправитьМЛ(Ссылка) Экспорт 
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ДанныеМобиКлиента = Новый Структура; 
	ДанныеМобиКлиента.Вставить("ТипОбмена", "МаршЛист"); 
	ДанныеМобиКлиента.Вставить("НомерДок", Ссылка.Номер); 
	ДанныеМобиКлиента.Вставить("КоличествоМест", Ссылка.КоличествоМест); 
	ДанныеМобиКлиента.Вставить("ДатаДок", Ссылка.Дата);
		ВодительСтруктура=Новый Структура;
		ВодительСтруктура.Вставить("Телефон",Ссылка.Водитель.Телефон);
		ВодительСтруктура.Вставить("Наименование",Ссылка.Водитель.Наименование);
		ВодительСтруктура.Вставить("Код",Ссылка.Водитель.Код);
	ДанныеМобиКлиента.Вставить("Водитель", ВодительСтруктура);
		АвтоСтруктура=Новый Структура;
		АвтоСтруктура.Вставить("Код",Ссылка.Автомобиль.Код);
		АвтоСтруктура.Вставить("Наименование",Ссылка.Автомобиль.Наименование);
		АвтоСтруктура.Вставить("ГосударственныйНомер",Ссылка.Автомобиль.ГосударственныйНомер);
		АвтоСтруктура.Вставить("МаркаАвтомобиля",Ссылка.Автомобиль.МаркаАвтомобиля.Наименование);
		АвтоСтруктура.Вставить("СерийныйНомер",Ссылка.Автомобиль.СерийныйНомер);
	ДанныеМобиКлиента.Вставить("Авто",АвтоСтруктура);
	//ДанныеМобиКлиента.Вставить("Комментарий",Ссылка.Комментарий);
	ДанныеМассив = Новый Массив;
		   Для Каждого СтрокаТЧ Из Ссылка.Данные Цикл
			   НоваяСтрокаТЧ=Новый Структура;
				   КлиентСтруктура=Новый Структура;
				   КлиентСтруктура.Вставить("Наименование",СтрокаТЧ.ДокументПрихода.Получатель.Наименование);
				   КлиентСтруктура.Вставить("Код",СтрокаТЧ.ДокументПрихода.Получатель.Код);
				   КлиентСтруктура.Вставить("ПолноеНаименование",СтрокаТЧ.ДокументПрихода.Получатель.ПолноеНаименование);
				   КлиентСтруктура.Вставить("Направление",СтрокаТЧ.ДокументПрихода.Получатель.Направление);
				   КлиентСтруктура.Вставить("ИНН",СтрокаТЧ.ДокументПрихода.Получатель.ИНН);
				   КлиентСтруктура.Вставить("КорX",СтрокаТЧ.ДокументПрихода.Получатель.КорX);
				   КлиентСтруктура.Вставить("КорY",СтрокаТЧ.ДокументПрихода.Получатель.КорY);
				   КлиентСтруктура.Вставить("Ориентир",СтрокаТЧ.ДокументПрихода.Получатель.Ориентир);
				   КлиентСтруктура.Вставить("АдресНаКарте",СтрокаТЧ.ДокументПрихода.Получатель.АдресНаКарте);
			   НоваяСтрокаТЧ.Вставить("Клиент",КлиентСтруктура);
			   НоваяСтрокаТЧ.Вставить("НомераСФ",СтрокаТЧ.ДокументПрихода.НомераСФ);
				   ДокументПриходаСтруктура=Новый Структура;
				   ДокументПриходаСтруктура.Вставить("Номер",СтрокаТЧ.ДокументПрихода.Номер);
				   ДокументПриходаСтруктура.Вставить("Дата",СтрокаТЧ.ДокументПрихода.Дата);
				   ДокументПриходаСтруктура.Вставить("Возврат",СтрокаТЧ.ДокументПрихода.Возврат);
				   ДокументПриходаСтруктура.Вставить("ВходитВКомплект",СтрокаТЧ.ДокументПрихода.ВходитВКомплект);
				   ДокументПриходаСтруктура.Вставить("Город",СтрокаТЧ.ДокументПрихода.Город);
				   ДокументПриходаСтруктура.Вставить("КоличествоКоробокПриПроверке",СтрокаТЧ.ДокументПрихода.КоличествоКоробокПриПроверке);
				   ДокументПриходаСтруктура.Вставить("Комментарий",СтрокаТЧ.ДокументПрихода.Комментарий);
				   ДокументПриходаСтруктура.Вставить("КонецОтгрузки",СтрокаТЧ.ДокументПрихода.КонецОтгрузки);
				   ДокументПриходаСтруктура.Вставить("Коробки",СтрокаТЧ.ДокументПрихода.Коробки);
				   ДокументПриходаСтруктура.Вставить("НачалоОтгрузки",СтрокаТЧ.ДокументПрихода.НачалоОтгрузки);
				   ДокументПриходаСтруктура.Вставить("НеПоказыватьВСписке",СтрокаТЧ.ДокументПрихода.НеПоказыватьВСписке);
				   ДокументПриходаСтруктура.Вставить("НомераСФ",СтрокаТЧ.ДокументПрихода.НомераСФ);
				   ДокументПриходаСтруктура.Вставить("ОбщийВес",СтрокаТЧ.ДокументПрихода.ОбщийВес);
				   ДокументПриходаСтруктура.Вставить("ОбщийОбъем",СтрокаТЧ.ДокументПрихода.ОбщийОбъем);
				   ДокументПриходаСтруктура.Вставить("Организация",СтрокаТЧ.ДокументПрихода.Организация);
				   ДокументПриходаСтруктура.Вставить("Ответственный",СтрокаТЧ.ДокументПрихода.Ответственный);
				   ДокументПриходаСтруктура.Вставить("Подразделение",СтрокаТЧ.ДокументПрихода.Подразделение);
				   ДокументПриходаСтруктура.Вставить("Самовывоз",СтрокаТЧ.ДокументПрихода.Самовывоз);
				   ДокументПриходаСтруктура.Вставить("СписокМестХранений",СтрокаТЧ.ДокументПрихода.СписокМестХранений);
				   ДокументПриходаСтруктура.Вставить("СформированВручную",СтрокаТЧ.ДокументПрихода.СформированВручную);
				   ДокументПриходаСтруктура.Вставить("ЭтоКомплект",СтрокаТЧ.ДокументПрихода.ЭтоКомплект);
				   ДокументыРасходаМассив=Новый  Массив;
				   Для Каждого СтрокаДР Из СтрокаТЧ.ДокументПрихода.ДокументыРасхода Цикл
					     НоваяСтрокаДР=Новый Структура;
						 НоваяСтрокаДР.Вставить("Док",СтрокаДР.Док);
						 НоваяСтрокаДР.Вставить("СчетФ",СтрокаДР.СчетФ);
						 НоваяСтрокаДР.Вставить("ШК",СтрокаДР.ШК);
						 НоваяСтрокаДР.Вставить("ДокНомер",СтрокаДР.ДокНомер);
						 НоваяСтрокаДР.Вставить("Комментарий",СтрокаДР.Комментарий);
						 НоваяСтрокаДР.Вставить("ДатаДокумента",СтрокаДР.ДатаДокумента);
						 НоваяСтрокаДР.Вставить("Количество",СтрокаДР.Количество);
						 НоваяСтрокаДР.Вставить("Сумма",СтрокаДР.Сумма);
						 НоваяСтрокаДР.Вставить("КолПозиций",СтрокаДР.КолПозиций);
						 НоваяСтрокаДР.Вставить("Объем",СтрокаДР.Объем);
						 НоваяСтрокаДР.Вставить("Вес",СтрокаДР.Вес);
				   		ДокументыРасходаМассив.Добавить(НоваяСтрокаДР);
					КонецЦикла;
					ДокументПриходаСтруктура.Вставить("ДокументыРасхода",ДокументыРасходаМассив);
			   НоваяСтрокаТЧ.Вставить("ДокументПрихода",ДокументПриходаСтруктура);
			   ДанныеМассив.Добавить(НоваяСтрокаТЧ);
		   КонецЦикла;
	ДанныеМобиКлиента.Вставить("Данные",ДанныеМассив);
	ЗаписатьJSON(ЗаписьJSON, ДанныеМобиКлиента);
		
	//СериализованнаяСтрока = ЗаписьJSON.Закрыть();
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Пользователь = "IT";
	Пароль = "1423";
	Запрос = Новый HTTPЗапрос;
	Запрос.АдресРесурса = "/status";
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON,"UTF-8");
	                                   
	Соединение2= Новый HTTPСоединение("sv99a1c019a/TMS/hs/obmen",,Пользователь,Пароль);
	ОтветHTTP=Соединение2.ОтправитьДляОбработки(Запрос);
КонецПроцедуры

Процедура ОтправитьБС(Ссылка) Экспорт 
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	//ДанныеМобиКлиента = Новый Структура; 
	//ДанныеМобиКлиента.Вставить("НомерДок", Ссылка.Номер); 
	//ДанныеМобиКлиента.Вставить("КоличествоМест", Ссылка.Коробки); 
	//ДанныеМобиКлиента.Вставить("ДатаДок", Ссылка.Дата);
	//	ВодительСтруктура=Новый Структура;
	//	ВодительСтруктура.Вставить("Телефон",Ссылка.Водитель.Телефон);
	//	ВодительСтруктура.Вставить("Наименование",Ссылка.Водитель.Наименование);
	//	ВодительСтруктура.Вставить("Код",Ссылка.Водитель.Код);
	//ДанныеМобиКлиента.Вставить("Водитель", ВодительСтруктура);
	//	АвтоСтруктура=Новый Структура;
	//	АвтоСтруктура.Вставить("Код",Ссылка.Автомобиль.Код);
	//	АвтоСтруктура.Вставить("Наименование",Ссылка.Автомобиль.Наименование);
	//	АвтоСтруктура.Вставить("ГосударственныйНомер",Ссылка.Автомобиль.ГосударственныйНомер);
	//	АвтоСтруктура.Вставить("МаркаАвтомобиля",Ссылка.Автомобиль.МаркаАвтомобиля.Наименование);
	//	АвтоСтруктура.Вставить("СерийныйНомер",Ссылка.Автомобиль.СерийныйНомер);
	//ДанныеМобиКлиента.Вставить("Авто",АвтоСтруктура);
	//ДанныеМобиКлиента.Вставить("Комментарий",Ссылка.Комментарий);
	//ДанныеМассив = Новый Массив;
	//	   Для Каждого СтрокаТЧ Из Ссылка.Данные Цикл
			   НоваяСтрокаТЧ=Новый Структура;
	НоваяСтрокаТЧ.Вставить("ТипОбмена", "БС"); 
				   КлиентСтруктура=Новый Структура;
				   КлиентСтруктура.Вставить("Наименование",Ссылка.Получатель.Наименование);
				   КлиентСтруктура.Вставить("Код",Ссылка.Получатель.Код);
				   КлиентСтруктура.Вставить("ПолноеНаименование",Ссылка.Получатель.ПолноеНаименование);
				   КлиентСтруктура.Вставить("Направление",Ссылка.Получатель.Направление);
				   КлиентСтруктура.Вставить("ИНН",Ссылка.Получатель.ИНН);
				   КлиентСтруктура.Вставить("КорX",Ссылка.Получатель.КорX);
				   КлиентСтруктура.Вставить("КорY",Ссылка.Получатель.КорY);
				   КлиентСтруктура.Вставить("Ориентир",Ссылка.Получатель.Ориентир);
				   КлиентСтруктура.Вставить("АдресНаКарте",Ссылка.Получатель.АдресНаКарте);
			   НоваяСтрокаТЧ.Вставить("Клиент",КлиентСтруктура);
			   НоваяСтрокаТЧ.Вставить("НомераСФ",Ссылка.НомераСФ);
				   ДокументПриходаСтруктура=Новый Структура;
				   ДокументПриходаСтруктура.Вставить("Номер",Ссылка.Номер);
				   ДокументПриходаСтруктура.Вставить("Дата",Ссылка.Дата);
				   ДокументПриходаСтруктура.Вставить("Возврат",Ссылка.Возврат);
				   ДокументПриходаСтруктура.Вставить("ВходитВКомплект",Ссылка.ВходитВКомплект);
				   ДокументПриходаСтруктура.Вставить("Город",Ссылка.Город);
				   ДокументПриходаСтруктура.Вставить("КоличествоКоробокПриПроверке",Ссылка.КоличествоКоробокПриПроверке);
				   ДокументПриходаСтруктура.Вставить("Комментарий",Ссылка.Комментарий);
				   ДокументПриходаСтруктура.Вставить("КонецОтгрузки",Ссылка.КонецОтгрузки);
				   ДокументПриходаСтруктура.Вставить("Коробки",Ссылка.Коробки);
				   ДокументПриходаСтруктура.Вставить("НачалоОтгрузки",Ссылка.НачалоОтгрузки);
				   ДокументПриходаСтруктура.Вставить("НеПоказыватьВСписке",Ссылка.НеПоказыватьВСписке);
				   ДокументПриходаСтруктура.Вставить("НомераСФ",Ссылка.НомераСФ);
				   ДокументПриходаСтруктура.Вставить("ОбщийВес",Ссылка.ОбщийВес);
				   ДокументПриходаСтруктура.Вставить("ОбщийОбъем",Ссылка.ОбщийОбъем);
				   ДокументПриходаСтруктура.Вставить("Организация",Ссылка.Организация);
				   ДокументПриходаСтруктура.Вставить("Ответственный",Ссылка.Ответственный);
				   ДокументПриходаСтруктура.Вставить("Подразделение",Ссылка.Подразделение);
				   ДокументПриходаСтруктура.Вставить("Самовывоз",Ссылка.Самовывоз);
				   ДокументПриходаСтруктура.Вставить("СписокМестХранений",Ссылка.СписокМестХранений);
				   ДокументПриходаСтруктура.Вставить("СформированВручную",Ссылка.СформированВручную);
				   ДокументПриходаСтруктура.Вставить("ЭтоКомплект",Ссылка.ЭтоКомплект);
				   ДокументыРасходаМассив=Новый  Массив;
				   Для Каждого СтрокаДР Из Ссылка.ДокументыРасхода Цикл
					     НоваяСтрокаДР=Новый Структура;
						 НоваяСтрокаДР.Вставить("Док",СтрокаДР.Док);
						 НоваяСтрокаДР.Вставить("СчетФ",СтрокаДР.СчетФ);
						 НоваяСтрокаДР.Вставить("ШК",СтрокаДР.ШК);
						 НоваяСтрокаДР.Вставить("ДокНомер",СтрокаДР.ДокНомер);
						 НоваяСтрокаДР.Вставить("Комментарий",СтрокаДР.Комментарий);
						 НоваяСтрокаДР.Вставить("ДатаДокумента",СтрокаДР.ДатаДокумента);
						 НоваяСтрокаДР.Вставить("Количество",СтрокаДР.Количество);
						 НоваяСтрокаДР.Вставить("Сумма",СтрокаДР.Сумма);
						 НоваяСтрокаДР.Вставить("КолПозиций",СтрокаДР.КолПозиций);
						 НоваяСтрокаДР.Вставить("Объем",СтрокаДР.Объем);
						 НоваяСтрокаДР.Вставить("Вес",СтрокаДР.Вес);
				   		ДокументыРасходаМассив.Добавить(НоваяСтрокаДР);
					КонецЦикла;
					ДокументПриходаСтруктура.Вставить("ДокументыРасхода",ДокументыРасходаМассив);
			   НоваяСтрокаТЧ.Вставить("ДокументПрихода",ДокументПриходаСтруктура);
			   //ДанныеМассив.Добавить(НоваяСтрокаТЧ);
		   //КонецЦикла;
	ЗаписатьJSON(ЗаписьJSON, НоваяСтрокаТЧ);
		
	//СериализованнаяСтрока = ЗаписьJSON.Закрыть();
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Пользователь = "IT";
	Пароль = "1423";
	Запрос = Новый HTTPЗапрос;
	Запрос.АдресРесурса = "/status";
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON,"UTF-8");
	                                   
	Соединение2= Новый HTTPСоединение("sv99a1c019a/TMS/hs/obmen",,Пользователь,Пароль);
	ОтветHTTP=Соединение2.ОтправитьДляОбработки(Запрос);
КонецПроцедуры

&НаСервере
Функция ИзменитьСтатусРасходаНаДату(ДатаИзменения,НомерДок,ДатаДок,КодСтатуса) Экспорт 
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	 
	//Запись структуры
	ДанныеМобиКлиента = Новый Структура; 
	ДанныеМобиКлиента.Вставить("НомерДок", НомерДок); 
	ДанныеМобиКлиента.Вставить("ДатаДок", ДатаДок);
	ДанныеМобиКлиента.Вставить("ДатаИзменения",ДатаИзменения);
	ДанныеМобиКлиента.Вставить("КодСтатуса",КодСтатуса);
	ЗаписатьJSON(ЗаписьJSON, ДанныеМобиКлиента);
		
	//СериализованнаяСтрока = ЗаписьJSON.Закрыть();
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Пользователь = "IT";
	Пароль = "1423";
	Запрос = Новый HTTPЗапрос;
	Запрос.АдресРесурса = "/status";
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON,"UTF-8");
	                                   
	Соединение2= Новый HTTPСоединение("192.168.0.173:80/TMSTash/hs/obmen",,Пользователь,Пароль);
	ОтветHTTP=Соединение2.ОтправитьДляОбработки(Запрос);
	
КонецФункции
