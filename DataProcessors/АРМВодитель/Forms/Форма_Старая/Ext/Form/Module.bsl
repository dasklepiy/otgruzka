
&НаКлиенте
Процедура НайтиПоШтрихКоду(Команда)
	Если ЗначениеЗаполнено(СокрЛП(ШК)) Тогда
		Если 13 = СтрДлина(ШК) Тогда
			Док = НайденыйДок(ШК);
			Если НЕ ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
			Иначе
				ДокументПрихода = СоздатьДокументПриходаНаСервере();
				Форма			= ПолучитьФорму("Документ.ПриходТовараНаМестоОтгрузки.ФормаОбъекта");
				ДанныеФормы		= Форма.Объект;
				ЗаполнитьНаСервереДокументПрихода(Док, ДанныеФормы);
				КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
				Форма.Открыть();
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при вводе!");
			ШК = "";
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
	
КонецПроцедуры

Функция НайденыйДок(Ном)
	Если Ном = Неопределено тогда
		Сообщить("Документ не найден!!!");
		Возврат Неопределено;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БольшаяЯчеистаяСборкаДокументыРасхода.Ссылка
		|ИЗ
		|	Документ.БольшаяЯчеистаяСборка.ДокументыРасхода КАК БольшаяЯчеистаяСборкаДокументыРасхода
		|ГДЕ
		|	БольшаяЯчеистаяСборкаДокументыРасхода.ШК = &ШК";
		Запрос.УстановитьПараметр("ШК", Ном);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли; 
	КонецЕсли;
КонецФункции



//Евгений
&НаСервере
Функция СоздатьДокументПриходаНаСервере()
	НовыйДокументПрихода = Документы.ПриходТовараНаМестоОтгрузки.СоздатьДокумент();
	Возврат НовыйДокументПрихода.Ссылка;
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервереДокументПрихода(Док, ДанныеФормы)
	ДанныеФормы.Контрагент			= Док.Контрагент;
	ДанныеФормы.КоличествоКоробок	= Док.КоличествоКоробок;
	ДанныеФормы.ОбщийВес			= Док.ОбщийВес;
	ДанныеФормы.ОбщийОбъем			= Док.ОбщийОбъем;
	НоваяСтрока = ДанныеФормы.РасходныеОрдера.Добавить();
	НоваяСтрока.РасходныйОрдер = Док;
КонецПроцедуры

//Евгений


Процедура НайтиДок()
	//Запрос =Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ТоварыНаСкладахОстатки.НомерМестаОтгрузки КАК НомерМеста,
	//			   |	ТоварыНаСкладахОстатки.ДокументПрихода КАК Документ,
	//			   |	ТоварыНаСкладахОстатки.Контрагент КАК Контрагент,
	//			   |	ТоварыНаСкладахОстатки.КоличествоКоробокОстаток КАК Количество,
	//			   |	ТоварыНаСкладахОстатки.ОбъемОстаток КАК Объем,
	//			   |	ТоварыНаСкладахОстатки.ВесОстаток КАК Вес
	//			   |ИЗ
	//			   |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки";
	//Результат = Запрос.Выполнить();
	//СписокДокументов.Загрузить(Результат.Выгрузить());
КонецПроцедуры

//**********************************************//

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если НЕ ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		
		Если ЗначениеЗаполнено(СокрЛП(Данные)) Тогда
			//--- Сброс Формы
			//Сообщить(СокрЛП(Данные));
			Если (СокрЛП(Данные))="000000000000" Тогда
				ШКВодитель="";
				ШК="";
				Водитель="";
				ОчиститьСообщения();
				 ОбновитьСписокПутевыхЛистов();
				//Сообщить("Сброс");
				Возврат;
			КонецЕсли;

			Если (СокрЛП(Данные))="111111111111" Тогда
				ОбновитьСписокПутевыхЛистов();
				Возврат;
			КонецЕсли;

			
			Если ЗначениеЗаполнено(ШКВодитель) Тогда
				ШК = Лев(Данные, СтрДлина(Данные) - 1);
			КонецЕсли;
			
			//------ Проверяем на другой ШК Водителя --------------
			Если ЗначениеЗаполнено(ШКВодитель) Тогда  // Проверка на ШК Водителя - может это другой
				ШКдругогоВодителя=Данные;
				НайденныйВодитель = НайтиВодителяПоШк(ШКдругогоВодителя);
				Если ЗначениеЗаполнено(НайденныйВодитель) Тогда
					Если НайденныйВодитель<>ШКВодитель Тогда
						ШКВодитель=Данные;
						ШК="";
						Водитель = НайденныйВодитель;
						ОчиститьСообщения();
						ОбновитьСписокПутевыхЛистов();
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			//-----------------------------------------------------
			
			
			
			
			//Если 12 = СтрДлина(Данные) Тогда
			Если Не ЗначениеЗаполнено(ШКВодитель) Тогда  // Ищем Водителя
				ШКВодитель = Данные;
				НайденныйВодитель = НайтиВодителяПоШк(ШКВодитель);
				Если Не ЗначениеЗаполнено(НайденныйВодитель) Тогда
					ОчиститьСообщения();
					Сообщить("Водитель не найден!!!");
					ШКВодитель = "";
					Водитель = "";
				Иначе 
					ОчиститьСообщения();
					Водитель = НайденныйВодитель;
				КонецЕсли;
				ОбновитьСписокПутевыхЛистов();
						
//-------------- ДОКУМЕНТ ------------------------------

			Иначе     // Ищем Документ
				Док = НайденыйДок(ШК);  //ДокБЯС
				
				//--------- Проверяем На Путевой Лист ----
				ПутевойЛист=ПроверкаНаПутевойЛист(Док,Водитель); 
				//Если ПутевойЛист=Неопределено Тогда
				//	Сообщить("Этот документ не в Вашем Путевом Листе.");
				//	Возврат;
				//КонецЕсли;
				
						
				//-----------------------------------------

				
				
				Если Не ЗначениеЗаполнено(Док) Тогда
					ОчиститьСообщения();
					Сообщить("Документ не найден!!!");
					ШК = "";
				КонецЕсли;	
					
				Если ЗначениеЗаполнено(Док) Тогда

					//ОчиститьСообщения();
					
					//Сообщить(ШК);
					//Сообщить(Док.Возврат);
					//Сообщить(Документ);
					//Если Док.Возврат Тогда
					//	Документ = Неопределено;
					//Иначе
					//	Документ = ПроверитьНаличиеДокумента(ШК);
					//КонецЕсли;
					 Документ = ПроверитьНаличиеДокумента(ШК,ЛОЖЬ);

					Если Документ = Неопределено Тогда
												
						//-----------------------------------------
						
						ДокументПриемТовараВодителем	= СоздатьДокументПриемаНаСервере();
						Форма							= ПолучитьФорму("Документ.ПриемТовараВодителем.ФормаОбъекта");
						ДанныеФормы						= Форма.Объект;
						ЗаполнитьНаСервереДокументПриема(Док, ДанныеФормы,ПутевойЛист);
						КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
						Форма.Открыть();
						
					Иначе
						//-- ПРОВЕРКА НА СФ -----Проверяем кому принадлежит документ только если это не возврат
						//Если Не Док.Возврат Тогда
							Если Документ.Водитель<>ЭтаФорма.Водитель.Ссылка Тогда
								Сообщить("Документ СФ-"+Документ.НомераСФ+" уже закреплен за другим водителем-"+Документ.Водитель);
								Возврат;
							КонецЕсли;
						//КонецЕсли;
						//----------------------------------
						ОткрытьЗначение(Документ);
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
		КонецЕсли;
	ИначеЕсли Источник <> "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		ОчиститьСообщения();
		Сообщить("Сканер Штрих кода не подключен! Устраните неполадку!");		
	КонецЕсли;
	 ОбновитьСписокПутевыхЛистов();

КонецПроцедуры

//******************************************************//


&НаКлиенте
Процедура НаДатуПриИзменении(Элемент)
	НайтиДок();
КонецПроцедуры


&НаКлиенте
Процедура Обновление(Команда)
	НайтиДок();
КонецПроцедуры
//ОбновитьИнтерфейс();

&НаКлиенте
Процедура СписокДокЗаказовПередУдалением(Элемент, Отказ)
	ТекСтрока = Элемент.ТекущиеДанные;
	СсылкаДокумента = ТекСтрока.Документ;
	
	ПоискДок(СсылкаДокумента);
КонецПроцедуры

Процедура ПоискДок(СсылкаДокумента)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриходТовараНаМестоОтгрузки.Ссылка,
	|	ПриходТовараНаМестоОтгрузки.ВерсияДанных,
	|	ПриходТовараНаМестоОтгрузки.ПометкаУдаления,
	|	ПриходТовараНаМестоОтгрузки.Номер,
	|	ПриходТовараНаМестоОтгрузки.Дата,
	|	ПриходТовараНаМестоОтгрузки.Проведен,
	|	ПриходТовараНаМестоОтгрузки.Контрагент,
	|	ПриходТовараНаМестоОтгрузки.КоличествоКоробок,
	|	ПриходТовараНаМестоОтгрузки.КоличествоКоробокПриПроверке,
	|	ПриходТовараНаМестоОтгрузки.ОбщийВес,
	|	ПриходТовараНаМестоОтгрузки.ОбщийОбъем,
	|	ПриходТовараНаМестоОтгрузки.НомерМестаОтгрузки,
	|	ПриходТовараНаМестоОтгрузки.Подразделение,
	|	ПриходТовараНаМестоОтгрузки.Пользователь,
	|	ПриходТовараНаМестоОтгрузки.Склад,
	|	ПриходТовараНаМестоОтгрузки.Коробки.(
	|		Ссылка,
	|		НомерСтроки,
	|		НомерКоробки,
	|		НомерСборки,
	|		ДатаМалойСборки
	|	)
	|ИЗ
	|	Документ.ПриходТовараНаМестоОтгрузки КАК ПриходТовараНаМестоОтгрузки
	|ГДЕ
	|	ПриходТовараНаМестоОтгрузки.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаДокумента);
	Результат = Запрос.Выполнить().Выгрузить()[0].Номер;
	
	Док = Документы.ПриходТовараНаМестоОтгрузки.НайтиПоНомеру(Результат);
	//Док.ПолучитьОбъект().Водитель = "";
	Док.ПолучитьОбъект().Записать(РежимЗаписиДокумента.ОтменаПроведения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	НайтиДок();
КонецПроцедуры


&НаКлиенте
Процедура ШКВодительПриИзменении(Элемент)
	//Возврат;
	Если ЗначениеЗаполнено(СокрЛП(ШКВодитель)) Тогда
		Если 13 = СтрДлина(ШКВодитель) Тогда
			НайденныйВодитель = НайтиВодителяПоШк(ШКВодитель);
			Если Не ЗначениеЗаполнено(НайденныйВодитель) Тогда
				ОчиститьСообщения();
				Сообщить("Водитель не найден!!!");
				ШКВодитель = "";
				Водитель = "";
			Иначе 
				Водитель = НайденныйВодитель;
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			ШКВодитель = "";
			Элементы.ШКВодитель.Доступность = Истина;
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиВодителяПоШк(ШКВодителя)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Штрихкод = &Штрихкод";
	Запрос.УстановитьПараметр("Штрихкод", ШКВодителя);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервереДокументПриема(Док, ДанныеФормы,ПутевойЛист)
	ДанныеФормы.Водитель			= Водитель;
	ДанныеФормы.КоличествоКоробок	= Док.Коробки;
	ДанныеФормы.КоличествоКоробокПриПроверке	= Док.Коробки;
	ДанныеФормы.ОбщийВес			= Док.ОбщийВес;
	ДанныеФормы.ОбщийОбъем			= Док.ОбщийОбъем;
	ДанныеФормы.Подразделение		= Справочники.Подразделения.НайтиПоНаименованию(СокрЛП(Док.Организация));
	ДанныеФормы.НомераСФ			= Док.НомераСФ;
	ДанныеФормы.ДокБЯС				= Док;
	ДанныеФормы.ПутевойЛист			= ПутевойЛист;
	ДанныеФормы.мВозврат			= Док.Возврат;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПутевыеЛистыОстатки.ПутевойЛист
	|ИЗ
	|	РегистрНакопления.ПутевыеЛисты.Остатки(, ДокументПрихода = &ДокументПрихода) КАК ПутевыеЛистыОстатки";
	Запрос.УстановитьПараметр("ДокументПрихода", Док);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПутевойЛист = Выборка.ПутевойЛист;
	Иначе
		ПутевойЛист = "";
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Док.МестаОтгрузки Цикл
		НоваяСтрока = ДанныеФормы.МестаОтгрузки.Добавить();
		НоваяСтрока.МестоОтгрузки		= ТекСтрока.МестоОтгрузки;
		НоваяСтрока.Контрагент			= Док.Получатель;
		НоваяСтрока.ДокументПрихода		= Док;
		НоваяСтрока.ПутевойЛист			= ПутевойЛист;
		НоваяСтрока.КоличествоКоробок	= ТекСтрока.КоличествоКоробок;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БольшаяЯчеистаяСборкаДокументыРасхода.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.БольшаяЯчеистаяСборка.ДокументыРасхода КАК БольшаяЯчеистаяСборкаДокументыРасхода
	|ГДЕ
	|	БольшаяЯчеистаяСборкаДокументыРасхода.ШК = &ШК";
	Запрос.УстановитьПараметр("ШК", ШК);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеФормы.ДокументыРасхода.Загрузить(Выборка.Ссылка.ДокументыРасхода.Выгрузить());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШКПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Водитель) Тогда
		Если 13 = СтрДлина(ШКВодитель) Тогда
			Док = НайденыйДок(ШК);
			Если Не ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
				ШК = "";
			Иначе
				ОчиститьСообщения();
				Документ = ПроверитьНаличиеДокумента(ШК,ЛОЖЬ);
				Если Документ = Неопределено Тогда
					ДокументПриемТовараВодителем	= СоздатьДокументПриемаНаСервере();
					Форма							= ПолучитьФорму("Документ.ПриемТовараВодителем.ФормаОбъекта");
					ДанныеФормы						= Форма.Объект;
					ЗаполнитьНаСервереДокументПриема(Док, ДанныеФормы,Неопределено);
					КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
					Форма.Открыть();
				Иначе
					ОткрытьЗначение(Документ);
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			ШКВодителя = "";
			Элементы.ШКВодитель.Доступность = Истина;
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеДокумента(ШК,ПризнакВозврата)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемТовараВодителем.Ссылка
	|ИЗ
	|	Документ.ПриемТовараВодителем КАК ПриемТовараВодителем
	|ГДЕ
	|	ПриемТовараВодителем.ДокументыРасхода.ШК = &ШК
	|	И ПриемТовараВодителем.мВозврат = &ПризнакВозврата";
	
	Запрос.УстановитьПараметр("ШК", ШК);
	 Запрос.УстановитьПараметр("ПризнакВозврата", ПризнакВозврата);


	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе 
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции

&НаСервере
Функция СоздатьДокументПриемаНаСервере()
	НовыйДокументПриема = Документы.ПриемТовараВодителем.СоздатьДокумент();
	Возврат НовыйДокументПриема.Ссылка;
КонецФункции

&НаКлиенте
Процедура Сброс(Команда)
	
	Водитель="";
	ШК="";
	ШКВодитель="";
	ОбновитьСписокПутевыхЛистов();

КонецПроцедуры


&НаКлиенте
Процедура ПоказатьСписокПутевыхЛистов(Команда)
	
	 ОбновитьСписокПутевыхЛистов();

КонецПроцедуры

 &НаКлиенте 
 Процедура ОбновитьСписокПутевыхЛистов()
	Попытка 
	ПутевыеЛисты.Параметры.УстановитьЗначениеПараметра("Водитель",Водитель);
	Элементы.ПутевыеЛисты.ТекущаяСтрока=1;
	//Сообщить(Элементы.ПутевыеЛисты.ТекущиеДанные.ПутевойЛист);
    СписокБЯС.Параметры.УстановитьЗначениеПараметра("ПутевойЛист",Элементы.ПутевыеЛисты.ТекущиеДанные.ПутевойЛист);
Исключение
	СписокБЯС.Параметры.УстановитьЗначениеПараметра("ПутевойЛист","");
	КонецПопытки;
 КонецПроцедуры


&НаКлиенте
 Процедура ПриОткрытии(Отказ)
	Попытка 
	 ПутевыеЛисты.Параметры.УстановитьЗначениеПараметра("Водитель",Водитель);
    СписокБЯС.Параметры.УстановитьЗначениеПараметра("ПутевойЛист",Элементы.ПутевыеЛисты.ТекущиеДанные.ПутевойЛист );
	Исключение
	КонецПопытки;
 КонецПроцедуры


&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 Попытка 
	 ПутевыеЛисты.Параметры.УстановитьЗначениеПараметра("Водитель",Водитель);
    СписокБЯС.Параметры.УстановитьЗначениеПараметра("ПутевойЛист","" );
	Исключение
	КонецПопытки;
 КонецПроцедуры
 
   &НаСервере
   Функция ПроверкаНаПутевойЛист(ДокБЯС,Водитель)
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПутевойЛистДанные.Ссылка
		|ИЗ
		|	Документ.ПутевойЛист.Данные КАК ПутевойЛистДанные
		|ГДЕ
		|	ПутевойЛистДанные.ДокументПрихода = &ДокументПрихода
		|	И ПутевойЛистДанные.Ссылка.Водитель = &Водитель";

	Запрос.УстановитьПараметр("Водитель", Водитель);
	Запрос.УстановитьПараметр("ДокументПрихода", ДокБЯС);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	Иначе 
		Возврат Неопределено;

	КонецЕсли;

	  
	   
   КонецФункции


&НаКлиенте
   Процедура ПутевыеЛистыПриАктивизацииСтроки(Элемент)
	 Попытка 
	ПутевыеЛисты.Параметры.УстановитьЗначениеПараметра("Водитель",Водитель);
	//Элементы.ПутевыеЛисты.ТекущаяСтрока=1;
	//Сообщить(Элементы.ПутевыеЛисты.ТекущиеДанные.ПутевойЛист);
    СписокБЯС.Параметры.УстановитьЗначениеПараметра("ПутевойЛист",Элементы.ПутевыеЛисты.ТекущиеДанные.ПутевойЛист);
Исключение
	СписокБЯС.Параметры.УстановитьЗначениеПараметра("ПутевойЛист","");
	КонецПопытки;

   КонецПроцедуры
   