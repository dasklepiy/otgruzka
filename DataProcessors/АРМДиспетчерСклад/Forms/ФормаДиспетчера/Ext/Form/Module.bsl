
&НаКлиенте
Процедура НайтиПоШтрихКоду(Команда)
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(СокрЛП(ШК)) Тогда
		Если 12 = СтрДлина(ШК) Тогда
			Если мВозврат Тогда
				//Найдем документы ПриемТовараВодителем и ПогрузкаТоваровВАвтомобиль,в которых данный штрих-код и установим
				//признак мВозврат = Истина
				//НайтиДокументыПогрузки(ШК);
			КонецЕсли;
			Док = НайденыйДок(ШК, мВозврат);
			Если НЕ ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
			Иначе 
				ОткрытьЗначение(Док);
			КонецЕсли;
		Иначе
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			
		КонецЕсли;
	Иначе
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
		
КонецПроцедуры

Функция НайденыйДок(Ном, мВозврат)
	
	
	Если Ном = Неопределено тогда
		Сообщить("Документ не найден!!!");
		Возврат Неопределено;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БольшаяЯчеистаяСборкаДокументыРасхода.Ссылка
		|ИЗ
		|	Документ.БольшаяЯчеистаяСборка.ДокументыРасхода КАК БольшаяЯчеистаяСборкаДокументыРасхода
		|ГДЕ
		|	БольшаяЯчеистаяСборкаДокументыРасхода.ШК = &ШК";
		Запрос.УстановитьПараметр("ШК", Ном);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			
			Возврат Выборка.Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли; 
	КонецЕсли;
КонецФункции

	
&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	//Если НЕ ВводДоступен() Тогда
	//	Возврат;
	//КонецЕсли;

	//ОчиститьСообщения();
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		//ШК = Лев(Данные, СтрДлина(Данные) - 1);
		ШК = Лев(Данные, 12);
		Если ЗначениеЗаполнено(ШК) Тогда
			Если ЗначениеЗаполнено(СокрЛП(ШК)) Тогда
				Если 12 = СтрДлина(ШК) Тогда
					Если мВозврат Тогда
						//Найдем документы ПриемТовараВодителем и ПогрузкаТоваровВАвтомобиль,в которых данный штрих-код и установим
						//признак мВозврат = Истина
						//НайтиДокументыПогрузки(ШК);
					КонецЕсли;
					Док = НайденыйДок(ШК, мВозврат);
					Если НЕ ЗначениеЗаполнено(Док) Тогда
						ОчиститьСообщения();
						Сообщить("Документ не найден!!!");
					Иначе 
						ОткрытьЗначение(Док);
						ПроверитьОстаткиПоКлиенту(Док);
					КонецЕсли;
				Иначе
					Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
					
				КонецЕсли;
			Иначе
				Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
			КонецЕсли;
		ИначеЕсли Источник <> "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
			Сообщить("Сканер Штрих кода не подключен! Устраните неполадку!");		
		ИначеЕсли Источник = "СканерШтрихкода" И Событие = "Barcode" И НЕ ЗначениеЗаполнено(Данные) Тогда
			Сообщить("Сканер не может считать данные.");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

 

&НаСервере
Процедура ПроверитьОстаткиПоКлиенту(Док)
	//Док=Документы.БольшаяЯчеистаяСборка.НайтиПоНомеру(1);
	Клиент=Док.Получатель;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЗонаОтгрузкиОстатки.КоличествоКоробокОстаток) КАК КоличествоКоробокОстаток,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Получатель,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.НомераСФ,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.СписокМестХранений КАК СписокМестХранений,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Организация Как Организация
		|ИЗ
		|	РегистрНакопления.ЗонаОтгрузки.Остатки(, ) КАК ЗонаОтгрузкиОстатки
		|ГДЕ
		|	ЗонаОтгрузкиОстатки.КоличествоКоробокОстаток > 0
		|	И ЗонаОтгрузкиОстатки.ДокументПрихода.Получатель = &Получатель
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Получатель,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.НомераСФ,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.СписокМестХранений,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Организация";


	Запрос.УстановитьПараметр("Получатель", Клиент);

	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
       Сообщить("ПОДСКАЗКА");
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("["+ВыборкаДетальныеЗаписи.Организация+"]"+" Товар Клиента - "+Клиент+ " Лежит на  - "+ВыборкаДетальныеЗаписи.СписокМестХранений+" коробок - "+ВыборкаДетальныеЗаписи.КоличествоКоробокОстаток);	
	КонецЦикла;



КонецПроцедуры

 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ИмяПользователя()="АСК" или ИмяПользователя()="НФС" Тогда
		
		//Не Распределенные  СФ
		//Очищаем Обор Если Есть
		
		ЭлементыОтбора=СписокНеРаспределенныхСФ.Отбор.Элементы;
		Если ЭлементыОтбора.Количество()>0 Тогда
			Для н=1 По ЭлементыОтбора.Количество() Цикл
				ЭлементыОтбора.Удалить(ЭлементыОтбора.Количество()-1);	
			КонецЦикла;
		КонецЕсли;
		
		//Устанавливаем Отбор
		НовыйЭлОтбора=ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Организация");
		НовыйЭлОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		Если ИмяПользователя()="НФС" Тогда
			НовыйЭлОтбора.ПравоеЗначение="НФС";
		Иначе
			НовыйЭлОтбора.ПравоеЗначение="Асклепий";
		КонецЕсли;
		
		// Распределенные  СФ
		//Очищаем Обор Если Есть
		
		ЭлементыОтбора=СписокРаспределенныеСФ.Отбор.Элементы;
		Если ЭлементыОтбора.Количество()>0 Тогда
			Для н=1 По ЭлементыОтбора.Количество() Цикл
				ЭлементыОтбора.Удалить(ЭлементыОтбора.Количество()-1);	
			КонецЦикла;
		КонецЕсли;
		
		//Устанавливаем Отбор
		НовыйЭлОтбора=ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Организация");
		НовыйЭлОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		Если ИмяПользователя()="НФС" Тогда
			НовыйЭлОтбора.ПравоеЗначение="НФС";
		Иначе
			НовыйЭлОтбора.ПравоеЗначение="Асклепий";
		КонецЕсли;

		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьИзСпискаНеРаспределенные(Команда)
	масСсылок=Элементы.СписокНеРаспределенныхСФ.ВыделенныеСтроки;
	 УбратьИзСпискаНеРаспределенныеСЕРВЕР(масСсылок);
     ОбновитьСписки();
КонецПроцедуры

&НаСервере
Процедура УбратьИзСпискаНеРаспределенныеСЕРВЕР(масСсылок)
	Для Каждого эл Из масСсылок Цикл
		ДокБЯС=эл.ПолучитьОбъект();
		ДокБЯС.НеПоказыватьВСписке=Истина;
		ДокБЯС.Записать(РежимЗаписиДокумента.Запись);
		Сообщить("СчетФ-"+эл.НомераСФ+" удален(ы) из списка");	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписки()
	
	Элементы.СписокНеРаспределенныхСФ.Обновить();
	Элементы.СписокРаспределенныеСФ.Обновить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокНеРаспределенныхСФ.Параметры.УстановитьЗначениеПараметра("ПогрузкаВАвто",Документы.ПогрузкаТоваровВАвтомобиль.ПустаяСсылка());
КонецПроцедуры
