
&НаКлиенте
Процедура НайтиПоШтрихКоду(Команда)
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(СокрЛП(ШК)) Тогда
		Если 12 = СтрДлина(ШК) Тогда
			Если мВозврат Тогда
				//Найдем документы ПриемТовараВодителем и ПогрузкаТоваровВАвтомобиль,в которых данный штрих-код и установим
				//признак мВозврат = Истина
				НайтиДокументыПогрузки(ШК);
			КонецЕсли;
			Док = НайденыйДок(ШК, мВозврат);
			Если НЕ ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
			Иначе 
				ОткрытьЗначение(Док);
			КонецЕсли;
		Иначе
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			
		КонецЕсли;
	Иначе
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
		
КонецПроцедуры

Функция НайденыйДок(Ном, мВозврат)
	
	
	Если Ном = Неопределено тогда
		Сообщить("Документ не найден!!!");
		Возврат Неопределено;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БольшаяЯчеистаяСборкаДокументыРасхода.Ссылка
		|ИЗ
		|	Документ.БольшаяЯчеистаяСборка.ДокументыРасхода КАК БольшаяЯчеистаяСборкаДокументыРасхода
		|ГДЕ
		|	БольшаяЯчеистаяСборкаДокументыРасхода.ШК = &ШК";
		Запрос.УстановитьПараметр("ШК", Ном);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			
			Если мВозврат Тогда
				//ВыборкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
				//ВыборкаОбъект.МестаОтгрузки.Очистить();
				//ВыборкаОбъект.Записать();
				Возврат ВыборкаОбъект.Ссылка;
			Иначе
				Возврат Выборка.Ссылка;
			КонецЕсли;
		Иначе
			Возврат Неопределено;
		КонецЕсли; 
	КонецЕсли;
КонецФункции




&НаСервере
Функция СоздатьДокументПриходаНаСервере()
	НовыйДокументПрихода = Документы.ПриходТовараНаМестоОтгрузки.СоздатьДокумент();
	Возврат НовыйДокументПрихода.Ссылка;
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервереДокументПрихода(Док, ДанныеФормы)
	ДанныеФормы.Контрагент			= Док.Контрагент;
	ДанныеФормы.КоличествоКоробок	= Док.КоличествоКоробок;
	ДанныеФормы.ОбщийВес			= Док.ОбщийВес;
	ДанныеФормы.ОбщийОбъем			= Док.ОбщийОбъем;
	НоваяСтрока = ДанныеФормы.РасходныеОрдера.Добавить();
	НоваяСтрока.РасходныйОрдер = Док;
КонецПроцедуры

&НаСервере
Функция ПроверитьДоступностьДокумента(Док)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.ДокументПрихода
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(, ДокументПрихода = &ДокументПрихода) КАК ТоварыНаСкладахОстатки";
	Запрос.УстановитьПараметр("ДокументПрихода", Док);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли; 
КонецФункции

 




Процедура НайтиДок()
	//Запрос =Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ТоварыНаСкладахОстатки.НомерМестаОтгрузки КАК НомерМеста,
	//			   |	ТоварыНаСкладахОстатки.ДокументПрихода КАК Документ,
	//			   |	ТоварыНаСкладахОстатки.Контрагент КАК Контрагент,
	//			   |	ТоварыНаСкладахОстатки.КоличествоКоробокОстаток КАК Количество,
	//			   |	ТоварыНаСкладахОстатки.ОбъемОстаток КАК Объем,
	//			   |	ТоварыНаСкладахОстатки.ВесОстаток КАК Вес
	//			   |ИЗ
	//			   |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки";
	//Результат = Запрос.Выполнить();
	//СписокДокументов.Загрузить(Результат.Выгрузить());
КонецПроцедуры
	
	
&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	//Если НЕ ВводДоступен() Тогда
	//	Возврат;
	//КонецЕсли;

	//ОчиститьСообщения();
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		ШК = Лев(Данные, СтрДлина(Данные) - 1);	
		Если ЗначениеЗаполнено(ШК) Тогда
			Если ЗначениеЗаполнено(СокрЛП(ШК)) Тогда
				Если 12 = СтрДлина(ШК) Тогда
					Если мВозврат Тогда
						//Найдем документы ПриемТовараВодителем и ПогрузкаТоваровВАвтомобиль,в которых данный штрих-код и установим
						//признак мВозврат = Истина
						НайтиДокументыПогрузки(ШК);
					КонецЕсли;
					Док = НайденыйДок(ШК, мВозврат);
					Если НЕ ЗначениеЗаполнено(Док) Тогда
						ОчиститьСообщения();
						Сообщить("Документ не найден!!!");
					Иначе 
						ОткрытьЗначение(Док);
						ПроверитьОстаткиПоКлиенту(Док);
					КонецЕсли;
				Иначе
					Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
					
				КонецЕсли;
			Иначе
				Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
			КонецЕсли;
		ИначеЕсли Источник <> "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
			Сообщить("Сканер Штрих кода не подключен! Устраните неполадку!");		
		ИначеЕсли Источник = "СканерШтрихкода" И Событие = "Barcode" И НЕ ЗначениеЗаполнено(Данные) Тогда
			Сообщить("Сканер не может считать данные.");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НайтиДокументыПогрузки(ШК)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПогрузкаТоваровВАвтомобильДокументыРасхода.Ссылка
	|ИЗ
	|	Документ.ПогрузкаТоваровВАвтомобиль.ДокументыРасхода КАК ПогрузкаТоваровВАвтомобильДокументыРасхода
	|ГДЕ
	|	ПогрузкаТоваровВАвтомобильДокументыРасхода.ШК = &ШК";
	Запрос.УстановитьПараметр("ШК", ШК);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВыборкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВыборкаОбъект.мВозврат = Истина;
		ВыборкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемТовараВодителемДокументыРасхода.Ссылка
	|ИЗ
	|	Документ.ПриемТовараВодителем.ДокументыРасхода КАК ПриемТовараВодителемДокументыРасхода
	|ГДЕ
	|	ПриемТовараВодителемДокументыРасхода.ШК = &ШК";
	Запрос.УстановитьПараметр("ШК", ШК);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВыборкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВыборкаОбъект.мВозврат = Истина;
		ВыборкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура НаДатуПриИзменении(Элемент)
	НайтиДок();
КонецПроцедуры

&НаСервере
Функция НайтиДокументПрихода();
	
КонецФункции



&НаКлиенте
Процедура Обновление(Команда)
	НайтиДок();
КонецПроцедуры

&НаКлиенте
Процедура СписокДокЗаказовПередУдалением(Элемент, Отказ)
	ТекСтрока = Элемент.ТекущиеДанные;
	СсылкаДокумента = ТекСтрока.Документ;

	ПоискДок(СсылкаДокумента);
КонецПроцедуры
 
Процедура ПоискДок(СсылкаДокумента)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходТовараНаМестоОтгрузки.Ссылка,
	               |	ПриходТовараНаМестоОтгрузки.ВерсияДанных,
	               |	ПриходТовараНаМестоОтгрузки.ПометкаУдаления,
	               |	ПриходТовараНаМестоОтгрузки.Номер,
	               |	ПриходТовараНаМестоОтгрузки.Дата,
	               |	ПриходТовараНаМестоОтгрузки.Проведен,
	               |	ПриходТовараНаМестоОтгрузки.Контрагент,
	               |	ПриходТовараНаМестоОтгрузки.КоличествоКоробок,
	               |	ПриходТовараНаМестоОтгрузки.КоличествоКоробокПриПроверке,
	               |	ПриходТовараНаМестоОтгрузки.ОбщийВес,
	               |	ПриходТовараНаМестоОтгрузки.ОбщийОбъем,
	               |	ПриходТовараНаМестоОтгрузки.НомерМестаОтгрузки,
	               |	ПриходТовараНаМестоОтгрузки.Подразделение,
	               |	ПриходТовараНаМестоОтгрузки.Пользователь,
	               |	ПриходТовараНаМестоОтгрузки.Склад,
	               |	ПриходТовараНаМестоОтгрузки.Коробки.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		НомерКоробки,
	               |		НомерСборки,
	               |		ДатаМалойСборки
	               |	)
	               |ИЗ
	               |	Документ.ПриходТовараНаМестоОтгрузки КАК ПриходТовараНаМестоОтгрузки
	               |ГДЕ
	               |	ПриходТовараНаМестоОтгрузки.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаДокумента);
	Результат = Запрос.Выполнить().Выгрузить()[0].Номер;
	
	Док = Документы.ПриходТовараНаМестоОтгрузки.НайтиПоНомеру(Результат);
	//Док.ПолучитьОбъект().Водитель = "";
	Док.ПолучитьОбъект().Записать(РежимЗаписиДокумента.ОтменаПроведения);
КонецПроцедуры


&НаСервере
Процедура ПроверитьОстаткиПоКлиенту(Док)
	//Док=Документы.БольшаяЯчеистаяСборка.НайтиПоНомеру(1);
	Клиент=Док.Получатель;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.НомерМестаОтгрузки,
		|	ТоварыНаСкладахОстатки.Контрагент,
		|	ТоварыНаСкладахОстатки.КоличествоКоробокОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.Контрагент = &Контрагент
		|	И ТоварыНаСкладахОстатки.КоличествоКоробокОстаток > 0";

	Запрос.УстановитьПараметр("Контрагент", Клиент);

	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
       Сообщить("ПОДСКАЗКА");
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("Товар Клиента - "+Клиент+ " Лежит на месте - "+ВыборкаДетальныеЗаписи.НомерМестаОтгрузки+" коробок - "+ВыборкаДетальныеЗаписи.КоличествоКоробокОстаток);	
	КонецЦикла;



КонецПроцедуры

 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ИмяПользователя()="АСК" или ИмяПользователя()="НФС" Тогда
		
		//Не Распределенные  СФ
		//Очищаем Обор Если Есть
		
		ЭлементыОтбора=СписокНеРаспределенныхСФ.Отбор.Элементы;
		Если ЭлементыОтбора.Количество()>0 Тогда
			Для н=1 По ЭлементыОтбора.Количество() Цикл
				ЭлементыОтбора.Удалить(ЭлементыОтбора.Количество()-1);	
			КонецЦикла;
		КонецЕсли;
		
		//Устанавливаем Отбор
		НовыйЭлОтбора=ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Организация");
		НовыйЭлОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		Если ИмяПользователя()="НФС" Тогда
			НовыйЭлОтбора.ПравоеЗначение="НФС";
		Иначе
			НовыйЭлОтбора.ПравоеЗначение="Асклепий";
		КонецЕсли;
		
		// Распределенные  СФ
		//Очищаем Обор Если Есть
		
		ЭлементыОтбора=СписокРаспределенныеСФ.Отбор.Элементы;
		Если ЭлементыОтбора.Количество()>0 Тогда
			Для н=1 По ЭлементыОтбора.Количество() Цикл
				ЭлементыОтбора.Удалить(ЭлементыОтбора.Количество()-1);	
			КонецЦикла;
		КонецЕсли;
		
		//Устанавливаем Отбор
		НовыйЭлОтбора=ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Организация");
		НовыйЭлОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		Если ИмяПользователя()="НФС" Тогда
			НовыйЭлОтбора.ПравоеЗначение="НФС";
		Иначе
			НовыйЭлОтбора.ПравоеЗначение="Асклепий";
		КонецЕсли;

		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьИзСпискаНеРаспределенные(Команда)
	масСсылок=Элементы.СписокНеРаспределенныхСФ.ВыделенныеСтроки;
	 УбратьИзСпискаНеРаспределенныеСЕРВЕР(масСсылок);
     ОбновитьСписки();
КонецПроцедуры

&НаСервере
Процедура УбратьИзСпискаНеРаспределенныеСЕРВЕР(масСсылок)
	Для Каждого эл Из масСсылок Цикл
		ДокБЯС=эл.ПолучитьОбъект();
		ДокБЯС.НеПоказыватьВСписке=Истина;
		ДокБЯС.Записать(РежимЗаписиДокумента.Запись);
		Сообщить("СчетФ-"+эл.НомераСФ+" удален(ы) из списка");	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписки()
	
	Элементы.СписокНеРаспределенныхСФ.Обновить();
	Элементы.СписокРаспределенныеСФ.Обновить();
КонецПроцедуры