
&НаКлиенте
Процедура ОбновитьСписки()
	Элементы.ВозвратныеСФнеПринятыеДиспетчером.Обновить();
	Элементы.ВозвратныеСФПринятыеДиспетчером.Обновить();
	Элементы.ВозвратныеСФПринятыеСТАРШИМВОДИТЕЛЕМ.Обновить();
	Элементы.ВозвратныеСФНеРаспечатанные.Обновить();
	Попытка
		ОбновитьСписокКонтрагентов(Null);
	Исключение
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если НЕ ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	      
	
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		ШК = Лев(Данные, 12);	
		 Если ЗначениеЗаполнено(ШК) Тогда
			 //Поиск Возвратной СчетФ
			 ШКПриИзменении(Элементы.ШК); 			  
		 КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция  НайтиДокументПоШК(ШК)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратнаяСчетФактура.Ссылка
		|ИЗ
		|	Документ.ВозвратнаяСчетФактура КАК ВозвратнаяСчетФактура
		|ГДЕ
		|	ВозвратнаяСчетФактура.ШК = &ШК
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВозвратнаяСчетФактура.Дата УБЫВ";

	Запрос.УстановитьПараметр("ШК", ШК);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат  ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

	

КонецФункции

&НаКлиенте
Процедура ШКПриИзменении(Элемент)
     ШКПриИзмененииСЕРВЕР();
	 ОбновитьСписки();

 КонецПроцедуры
		  
&НаСервере
Процедура ШКПриИзмененииСЕРВЕР()
	//ШКДок = Лев(ШК, СтрДлина(ШК) - 1);
	ШКДок = ШК;
	Док=НайтиДокументПоШК(ШКДок);
			  Если ЗначениеЗаполнено(Док) Тогда
				 //Документ Найден
				 //Проверяем распечатан ли он
				 Если Не Док.Распечатано Тогда
					 //Ставим распечатку
					 ДокОбъект=Док.ПолучитьОбъект();
					 ДокОбъект.Распечатано=Истина;
					 ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
					 Сообщить("Документ СФ - "+Док.НомерСчетфактуры + " РАСПЕЧАТАН.");
					 Возврат;	
				 КонецЕсли;
				 
				 //Приемка диспетчером только если есть на месте отгрузки
				 проверкаОстатков=модСерверПолныеПрава.ПроверитьОстаткиПоКлиенту(Док.Контрагент);
				 Если проверкаОстатков<>Неопределено Тогда
					 Если ЗначениеЗаполнено(Док.ДВПриемаДиспетчером) Тогда
						 Сообщить("Документ СФ - "+Док.НомерСчетфактуры + " уже принят ДИСПЕТЧЕРОМ.");	 
					 Иначе	 
						 ДокОбъект=Док.ПолучитьОбъект();
						 ДокОбъект.ДВПриемаДиспетчером=ТекущаяДата();
						 ДокОбъект.Диспетчер=ИмяПользователя();
						 ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
						 Сообщить("УСПЕШНО. Документ найден СФ - "+Док.НомерСчетфактуры + " и принят ДИСПЕТЧЕРОМ");
					 КонецЕсли;
				 Иначе
					Сообщить("ОТКАЗАНО! Нет Клиентов в зоне отгрузки.");
				 КонецЕсли;
			 
			 Иначе
				 Сообщить("ОШИБКА! Документ не найден.");
			  КонецЕсли;

			  
			  
КонецПроцедуры

&НаКлиенте
Процедура УбратьОтметкуТекущейСтроки()
			//Элементы.ВозвратныеСФнеПринятыеДиспетчером.ТекущаяСтрока=-1;
			//  Элементы.ВозвратныеСФПринятыеДиспетчером.ТекущаяСтрока=-1;
			//  Элементы.ВозвратныеСФПринятыеСТАРШИМВОДИТЕЛЕМ.ТекущаяСтрока=-1;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УбратьОтметкуТекущейСтроки();
	ОбновитьСписки();
КонецПроцедуры

&НаКлиенте
Процедура ПринятьСФдиспетчером(Команда)
	
	Если Вопрос("Принять выделенные Счет Фактуры вручную?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
	     Возврат;
	КонецЕсли;
	масСсылок=Элементы.ВозвратныеСФнеПринятыеДиспетчером.ВыделенныеСтроки;
	ПринятьСФдиспетчеромСЕРВЕР(масСсылок);
	 ОбновитьСписки();

КонецПроцедуры

&НаСервере
Процедура ПринятьСФдиспетчеромСЕРВЕР(масСсылок)
	
	Для Каждого Эл Из масСсылок Цикл
		Док=Эл.ПолучитьОбъект();
		Док.Диспетчер=ИмяПользователя();
		Док.ДВПриемаДиспетчером =ТекущаяДата();
		Док.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПриемкуСФдиспетчером(Команда)
	Если Вопрос("Отменить выделенные Счет Фактуры?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
	     Возврат;
	КонецЕсли;
	масСсылок=Элементы.ВозвратныеСФПринятыеДиспетчером.ВыделенныеСтроки;
	ОтменитьПриемкуСФдиспетчеромСЕРВЕР(масСсылок);
      ОбновитьСписки();

КонецПроцедуры
&НаСервере
Процедура ОтменитьПриемкуСФдиспетчеромСЕРВЕР(масСсылок)
	
	Для Каждого Эл Из масСсылок Цикл
		Док=Эл.ПолучитьОбъект();
		Док.Диспетчер="";
		Док.ДВПриемаДиспетчером ="";
		Док.Записать();
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ПометитьКакРаспечатанные(Команда)
	Если Вопрос("Пометить Счет Фактуры как распечатанные?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
	     Возврат;
	КонецЕсли;
	масСсылок=Элементы.ВозвратныеСФНеРаспечатанные.ВыделенныеСтроки;
	ПометитьКакРаспечатанныеСЕРВЕР(масСсылок);
	ОбновитьСписки();


КонецПроцедуры
&НаСервере
Процедура ПометитьКакРаспечатанныеСЕРВЕР(масСсылок)
	  Для Каждого Эл Из масСсылок Цикл
		Док=Эл.ПолучитьОбъект();
		Док.Распечатано=Истина;
		Док.Записать();
	КонецЦикла;

КонецПроцедуры



&НаСервере
Процедура ЗаполнитьСписокКонтрагентовВЗонеОтгрузкиСЕРВЕР()
	
	СписокКонтрагентовВЗонеОтгрузки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗонаОтгрузкиОстатки.НомерМестаОтгрузки) КАК НомерМестаОтгрузки,
		|	СУММА(ЗонаОтгрузкиОстатки.КоличествоКоробокОстаток) КАК КоличествоКоробокОстаток,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Получатель КАК Контрагент,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Организация КАК Организация
		|ИЗ
		|	РегистрНакопления.ЗонаОтгрузки.Остатки КАК ЗонаОтгрузкиОстатки
		|ГДЕ
		|	ЗонаОтгрузкиОстатки.НомерМестаОтгрузки.Палет = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Получатель,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.Получатель.Наименование";

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Н=1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокКонтрагентовВЗонеОтгрузки.Добавить(ВыборкаДетальныеЗаписи.Контрагент,
				Строка(Н)+"."+Символы.Таб+Символы.Таб+
				"["+Лев(ВыборкаДетальныеЗаписи.Организация,3) + "]"+
				Символы.Таб+Символы.Таб+"["+ВыборкаДетальныеЗаписи.НомерМестаОтгрузки +
				"] [" + ВыборкаДетальныеЗаписи.КоличествоКоробокОстаток+"]" +
				Символы.Таб+Символы.Таб+Символы.Таб+Символы.Таб+Символы.Таб+ ВыборкаДетальныеЗаписи.Контрагент.Наименование);
				Н=Н+1;
	КонецЦикла;

	

	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСписокКонтрагентов(Команда)
	ЗаполнитьСписокКонтрагентовВЗонеОтгрузкиСЕРВЕР();
	//Установить Условное Оформление
	
	//УО=ВозвратныеСФнеПринятыеДиспетчером.УсловноеОформление.Элементы;
	УО=ВозвратныеСФнеПринятыеДиспетчером.УсловноеОформление.Элементы;
	//Очищаем УО
	КолУО=УО.Количество();
	Если КолУО>0 Тогда
		Для Н=1 По КолУО Цикл
			УО.Удалить(КолУО-Н);
			Н=Н+1;
	КонецЦикла;
КонецЕсли;
// Устанавливаем УО
Если СписокКонтрагентовВЗонеОтгрузки.Количество()>0 Тогда
	новыйЭЛ=УО.Добавить();
	новыйЭЛ.Оформление.УстановитьЗначениеПараметра("ЦветФона",
					WebЦвета.Бирюзовый);
	ЭлУсловия=новыйЭЛ.Отбор.Элементы.Добавить(
					тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлУсловия.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Контрагент");
	ЭлУсловия.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлУсловия.ПравоеЗначение=СписокКонтрагентовВЗонеОтгрузки;
				

КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ОбновитьВСЕ(Команда)
	ОбновитьСписки();
КонецПроцедуры

