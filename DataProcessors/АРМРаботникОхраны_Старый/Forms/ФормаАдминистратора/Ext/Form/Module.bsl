
&НаКлиенте
Процедура НайтиПоШтрихКоду(Команда)
	Если ЗначениеЗаполнено(СокрЛП(ШК)) Тогда
		Если 13 = СтрДлина(ШК) Тогда
			Док = НайденныйДок(ШК);
			Если НЕ ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
			Иначе
				ДокументПрихода = СоздатьДокументПриходаНаСервере();
				Форма			= ПолучитьФорму("Документ.ПриходТовараНаМестоОтгрузки.ФормаОбъекта");
				ДанныеФормы		= Форма.Объект;
				ЗаполнитьНаСервереДокументПрихода(Док, ДанныеФормы);
				КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
				Форма.Открыть();
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при вводе!");
			ШК = "";
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
	
КонецПроцедуры

//Евгений
&НаСервере
Функция НайденныйДок(ШК)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемТовараВодителемДокументыРасхода.Ссылка
	|ИЗ
	|	Документ.ПриемТовараВодителем.ДокументыРасхода КАК ПриемТовараВодителемДокументыРасхода
	|ГДЕ
	|	ПриемТовараВодителемДокументыРасхода.ШК = &ШК";	
	Запрос.УстановитьПараметр("ШК", ШК);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции



//Евгений
&НаСервере
Функция СоздатьДокументПриходаНаСервере()
	НовыйДокументПрихода = Документы.ПриходТовараНаМестоОтгрузки.СоздатьДокумент();
	Возврат НовыйДокументПрихода.Ссылка;
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервереДокументПрихода(Док, ДанныеФормы)
	ДанныеФормы.Контрагент			= Док.Контрагент;
	ДанныеФормы.КоличествоКоробок	= Док.КоличествоКоробок;
	ДанныеФормы.ОбщийВес			= Док.ОбщийВес;
	ДанныеФормы.ОбщийОбъем			= Док.ОбщийОбъем;
	НоваяСтрока = ДанныеФормы.РасходныеОрдера.Добавить();
	НоваяСтрока.РасходныйОрдер = Док;
КонецПроцедуры

//Евгений


Процедура НайтиДок()
	//Запрос =Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ТоварыНаСкладахОстатки.НомерМестаОтгрузки КАК НомерМеста,
	//			   |	ТоварыНаСкладахОстатки.ДокументПрихода КАК Документ,
	//			   |	ТоварыНаСкладахОстатки.Контрагент КАК Контрагент,
	//			   |	ТоварыНаСкладахОстатки.КоличествоКоробокОстаток КАК Количество,
	//			   |	ТоварыНаСкладахОстатки.ОбъемОстаток КАК Объем,
	//			   |	ТоварыНаСкладахОстатки.ВесОстаток КАК Вес
	//			   |ИЗ
	//			   |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки";
	//Результат = Запрос.Выполнить();
	//СписокДокументов.Загрузить(Результат.Выгрузить());
КонецПроцедуры
	
	
&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если НЕ ВводДоступен() Тогда
		//Возврат;
	КонецЕсли;
	
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		Если Не ЗначениеЗаполнено(ШКОхрана) Тогда
			ШКОхрана = Данные;
			НайденныйОхранник = НайтиФизЛицоПоШк(ШКОхрана);
			Если Не ЗначениеЗаполнено(НайденныйОхранник) Тогда
				ОчиститьСообщения();
				Сообщить("Охранник не найден!!!");
				ШКОхрана = "";
				РаботникОхраны = "";
			Иначе 
				РаботникОхраны = НайденныйОхранник;
			КонецЕсли;
		ИначеЕсли Не ЗначениеЗаполнено(ШКВодитель) Тогда
			ШКВодитель = Данные;
			НайденныйВодитель = НайтиФизЛицоПоШк(ШКВодитель);
			Если Не ЗначениеЗаполнено(НайденныйВодитель) Тогда
				ОчиститьСообщения();
				Сообщить("Водитель не найден!!!");
				ШКВодитель = "";
				Водитель = "";
			Иначе 
				Водитель = НайденныйВодитель;
			КонецЕсли;
		Иначе
			ШК = Лев(Данные, СтрДлина(Данные) - 1);
			Док = НайденныйДок(ШК);
			Если Не ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
				ШК = "";
			Иначе
				ОчиститьСообщения();
				Документ = ПроверитьНаличиеДокумента(ШК);
				Если Документ = Неопределено Тогда
					ДокументПриемТовараВодителем	= СоздатьДокументПогрузкаНаСервере();
					Форма							= ПолучитьФорму("Документ.ПогрузкаТоваровВАвтомобиль.ФормаОбъекта");
					ДанныеФормы						= Форма.Объект;
					ЗаполнитьНаСервереДокументПриема(Док, ДанныеФормы);
					КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
					Форма.Открыть();
				Иначе
					ОткрытьЗначение(Документ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Источник <> "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		ОчиститьСообщения();
		Сообщить("Сканер Штрих кода не подключен! Устраните неполадку!");		
	КонецЕсли;
	
КонецПроцедуры




&НаКлиенте
Процедура НаДатуПриИзменении(Элемент)
	НайтиДок();
КонецПроцедуры


&НаКлиенте
Процедура Обновление(Команда)
	НайтиДок();
КонецПроцедуры
//ОбновитьИнтерфейс();

&НаКлиенте
Процедура СписокДокЗаказовПередУдалением(Элемент, Отказ)
	ТекСтрока = Элемент.ТекущиеДанные;
	СсылкаДокумента = ТекСтрока.Документ;

	ПоискДок(СсылкаДокумента);
КонецПроцедуры
 
Процедура ПоискДок(СсылкаДокумента)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходТовараНаМестоОтгрузки.Ссылка,
	               |	ПриходТовараНаМестоОтгрузки.ВерсияДанных,
	               |	ПриходТовараНаМестоОтгрузки.ПометкаУдаления,
	               |	ПриходТовараНаМестоОтгрузки.Номер,
	               |	ПриходТовараНаМестоОтгрузки.Дата,
	               |	ПриходТовараНаМестоОтгрузки.Проведен,
	               |	ПриходТовараНаМестоОтгрузки.Контрагент,
	               |	ПриходТовараНаМестоОтгрузки.КоличествоКоробок,
	               |	ПриходТовараНаМестоОтгрузки.КоличествоКоробокПриПроверке,
	               |	ПриходТовараНаМестоОтгрузки.ОбщийВес,
	               |	ПриходТовараНаМестоОтгрузки.ОбщийОбъем,
	               |	ПриходТовараНаМестоОтгрузки.НомерМестаОтгрузки,
	               |	ПриходТовараНаМестоОтгрузки.Подразделение,
	               |	ПриходТовараНаМестоОтгрузки.Пользователь,
	               |	ПриходТовараНаМестоОтгрузки.Склад,
	               |	ПриходТовараНаМестоОтгрузки.Коробки.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		НомерКоробки,
	               |		НомерСборки,
	               |		ДатаМалойСборки
	               |	)
	               |ИЗ
	               |	Документ.ПриходТовараНаМестоОтгрузки КАК ПриходТовараНаМестоОтгрузки
	               |ГДЕ
	               |	ПриходТовараНаМестоОтгрузки.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаДокумента);
	Результат = Запрос.Выполнить().Выгрузить()[0].Номер;
	
	Док = Документы.ПриходТовараНаМестоОтгрузки.НайтиПоНомеру(Результат);
	//Док.ПолучитьОбъект().Водитель = "";
	Док.ПолучитьОбъект().Записать(РежимЗаписиДокумента.ОтменаПроведения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	НайтиДок();
КонецПроцедуры


&НаКлиенте
Процедура ШКВодительПриИзменении(Элемент)
	Если ЗначениеЗаполнено(СокрЛП(ШКВодитель)) Тогда
		Если 13 = СтрДлина(ШКВодитель) Тогда
			НайденныйВодитель = НайтиФизЛицоПоШк(ШКВодитель);
			Если Не ЗначениеЗаполнено(НайденныйВодитель) Тогда
				ОчиститьСообщения();
				Сообщить("Водитель не найден!!!");
				ШКВодитель = "";
				Водитель = "";
			Иначе 
            	Водитель = НайденныйВодитель;
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			ШКВодитель = "";
			Элементы.ШКВодителя.Доступность = Истина;
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиФизЛицоПоШк(ШКФизЛицо)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Штрихкод = &Штрихкод";
	Запрос.УстановитьПараметр("Штрихкод", ШКФизЛицо);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервереДокументПриема(Док, ДанныеФормы)
	ДанныеФормы.РаботникОхраны		= РаботникОхраны;
	ДанныеФормы.Водитель			= Водитель;
	ДанныеФормы.Автомобиль			= Автомобиль;
	ДанныеФормы.КоличествоКоробок	= Док.КоличествоКоробок;
	ДанныеФормы.ОбщийВес			= Док.ОбщийВес;
	ДанныеФормы.ОбщийОбъем			= Док.ОбщийОбъем;
	ДанныеФормы.ДокументОснование	= Док;
	
	ДанныеФормы.ДокументыРасхода.Загрузить(Док.ДокументыРасхода.Выгрузить());	
КонецПроцедуры

&НаКлиенте
Процедура ШКПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Водитель) Тогда
		Если 13 = СтрДлина(ШКВодитель) Тогда
			Док = НайденныйДок(ШК);
			Если Не ЗначениеЗаполнено(Док) Тогда
				ОчиститьСообщения();
				Сообщить("Документ не найден!!!");
				ШК = "";
			Иначе
				ОчиститьСообщения();
				ДоступностьДокумента = ПроверитьНаличиеДокумента(Док);
				Если ДоступностьДокумента Тогда
					ДокументПриемТовараВодителем	= СоздатьДокументПогрузкаНаСервере();
					Форма							= ПолучитьФорму("Документ.ПогрузкаТоваровВАвтомобиль.ФормаОбъекта");
					ДанныеФормы						= Форма.Объект;
					ЗаполнитьНаСервереДокументПриема(Док, ДанныеФормы);
					КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
					Форма.Открыть();
				Иначе
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Расходный ордер №" + ШК + " уже оприходован!";
					Сообщение.Сообщить();
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			ШКВодителя = "";
			Элементы.ШКВодителя.Доступность = Истина;
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеДокумента(ШК)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПогрузкаТоваровВАвтомобиль.Ссылка
	|ИЗ
	|	Документ.ПогрузкаТоваровВАвтомобиль КАК ПогрузкаТоваровВАвтомобиль
	|ГДЕ
	|	ПогрузкаТоваровВАвтомобиль.ДокументыРасхода.ШК = &ШК";
	Запрос.УстановитьПараметр("ШК", ШК);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе 
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции

&НаСервере
Функция СоздатьДокументПогрузкаНаСервере()
	НовыйДокументПриема = Документы.ПогрузкаТоваровВАвтомобиль.СоздатьДокумент();
	Возврат НовыйДокументПриема.Ссылка;
КонецФункции

&НаКлиенте
Процедура ШКОхранаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(СокрЛП(ШКОхрана)) Тогда
		Если 13 = СтрДлина(ШКОхрана) Тогда
			НайденныйОхранник = НайтиФизЛицоПоШк(ШКОхрана);
			Если Не ЗначениеЗаполнено(НайденныйОхранник) Тогда
				ОчиститьСообщения();
				Сообщить("Охранник не найден!!!");
				ШКОхрана = "";
				РаботникОхраны = "";
			Иначе 
				РаботникОхраны = НайденныйОхранник;
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			ШКВодитель = "";
			ШКОхрана.ШКВодителя.Доступность = Истина;
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШКАвтомобильПриИзменении(Элемент)
	Если ЗначениеЗаполнено(СокрЛП(ШКАвтомобиль)) Тогда
		Если 13 = СтрДлина(ШКАвтомобиль) Тогда
			НайденныйАвтомобиль = НайтиАвтомобиль(ШКАвтомобиль);
			Если Не ЗначениеЗаполнено(НайденныйАвтомобиль) Тогда
				ОчиститьСообщения();
				Сообщить("Автомобиль не найден!!!");
				ШКАвтомобиль = "";
				Автомобиль = "";
			Иначе 
				Автомобиль = НайденныйАвтомобиль;
			КонецЕсли;
		Иначе
			ОчиститьСообщения();
			Сообщить("Не правильно введен штрих код!! Будьте внимательны при сканировании!");
			ШКАвтомобиль = "";
		КонецЕсли;
	Иначе
		ОчиститьСообщения();
		Сообщить("Введите Штрих Код!",СтатусСообщения.ОченьВажное);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиАвтомобиль(ШКАвтомобиль)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Автомобили.Ссылка
	|ИЗ
	|	Справочник.Автомобили КАК Автомобили
	|ГДЕ
	|	Автомобили.ШтрихКод = &ШтрихКод";
	Запрос.УстановитьПараметр("ШтрихКод", ШКАвтомобиль);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции



