
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата = НачалоДня(ТекущаяДата());
	ДатаПутевогоЛиста=НачалоДня(ТекущаяДата());
	ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата";
	ЗаполнитьТаблицуКлиентов();
	ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона";
	ЗаполнитьТаблицуКлиентов();
	ПутевыеЛисты.Параметры.УстановитьЗначениеПараметра("Дата",ДатаПутевогоЛиста);
	ПутевыеЛисты_2.Параметры.УстановитьЗначениеПараметра("Дата",ДатаПутевогоЛиста);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКлиентов();
	Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
		РаспределениеТоваров.Очистить();
	ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
		РаспределениеТоваровОтстойник.Очистить();
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.НомерМестаОтгрузки КАК МестоОтгрузки,
	|	ТоварыНаСкладахОстатки.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоКоробокОстаток, 0) - ЕСТЬNULL(ПутевыеЛистыОстатки.КоличествоКоробокОстаток, 0) КАК КоличествоКоробок,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВесОстаток, 0) - ЕСТЬNULL(ПутевыеЛистыОстатки.ВесОстаток, 0) КАК Вес,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.ОбъемОстаток, 0) - ЕСТЬNULL(ПутевыеЛистыОстатки.ОбъемОстаток, 0) КАК Объем,
	|	ТоварыНаСкладахОстатки.ДокументПрихода
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПутевыеЛисты.Остатки КАК ПутевыеЛистыОстатки
	|		ПО ТоварыНаСкладахОстатки.НомерМестаОтгрузки = ПутевыеЛистыОстатки.МестоОтгрузки
	|			И ТоварыНаСкладахОстатки.Контрагент = ПутевыеЛистыОстатки.Контрагент
	|			И ТоварыНаСкладахОстатки.ДокументПрихода = ПутевыеЛистыОстатки.ДокументПрихода
	|ГДЕ
	|	ТоварыНаСкладахОстатки.ДокументПрихода.Город = ИСТИНА
	|	И ТоварыНаСкладахОстатки.НомерМестаОтгрузки.Палет = ЛОЖЬ
	|	И ТоварыНаСкладахОстатки.НомерМестаОтгрузки.Отстойник = &Отстойник
	|	И ТоварыНаСкладахОстатки.КоличествоКоробокОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
		Запрос.УстановитьПараметр("Отстойник",ЛОЖЬ);
	ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
		Запрос.УстановитьПараметр("Отстойник",Истина);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоКоробок > 0 Тогда
			Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
				НоваяСтрока = РаспределениеТоваров.Добавить();
			ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
				НоваяСтрока = РаспределениеТоваровОтстойник.Добавить();
			КонецЕсли;
			НоваяСтрока.Контрагент 			= Выборка.Контрагент;
			НоваяСтрока.МестоОтгрузки		= Выборка.МестоОтгрузки;
			НоваяСтрока.КоличествоКоробок	= Выборка.КоличествоКоробок;
			НоваяСтрока.Объем				= Выборка.Объем;
			НоваяСтрока.Вес					= Выборка.Вес;
			НоваяСтрока.ДокументПрихода		= Выборка.ДокументПрихода;
			НоваяСтрока.Комментарий			= Выборка.ДокументПрихода.Комментарий;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьПутевыеЛисты(Команда)
	
	//Проверить Наличие Возвратных СчетФ
	Если НаличиеВозвратныхСчетФвЗонеОтгрузки() Тогда
		Предупреждение("Есть возвратные СчетФактуры в зоне отгрузки. Перед созданием путевых листов выполните их приемку.");
		//Возврат;
    КонецЕсли;
	
	
	Если Вопрос("Создать путевые листы за "+ Дата + " для Зоны Отгрузки - "+ЭтаФорма.ЗонаОтгрузки, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	СоздатьПутевыеЛистыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПутевыеЛистыНаСервере()
	
	Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
		ТаблицаВодителей = РаспределениеТоваров.Выгрузить();
   	ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
		ТаблицаВодителей = РаспределениеТоваровОтстойник.Выгрузить();
    КонецЕсли;

		
	
	ТаблицаВодителей.Свернуть("Водитель");
	
	Если ТаблицаВодителей.Количество()=1  Тогда
		Если НЕ ЗначениеЗаполнено(ТаблицаВодителей[0].Водитель) Тогда
			Сообщить("Нет назначенных водителей.");
			Возврат;		
		КонецЕсли;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПутевойЛист.Ссылка,
	|	ПутевойЛист.Водитель
	|ИЗ
	|	Документ.ПутевойЛист КАК ПутевойЛист
	|ГДЕ
	|	ПутевойЛист.Дата = &Дата";
	Запрос.УстановитьПараметр("Дата", Дата);
	ТаблицаПутевыхЛистов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаВодителей Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Водитель) Тогда
			//Сообщить("Нет Водителя.");
			Продолжить;
		КонецЕсли;
		
		Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
			НайденныеСтроки = РаспределениеТоваров.НайтиСтроки(Новый Структура("Водитель", ТекСтрока.Водитель));
		ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
			НайденныеСтроки = РаспределениеТоваровОтстойник.НайтиСтроки(Новый Структура("Водитель", ТекСтрока.Водитель));
		КонецЕсли;

		Если Не НайденныеСтроки.Количество() = 0 Тогда
			НайденныеПутевыеЛисты = ТаблицаПутевыхЛистов.НайтиСтроки(Новый Структура("Водитель", ТекСтрока.Водитель));
			Если НайденныеПутевыеЛисты.Количество() = 0 Тогда
				НовыйДокумент = Документы.ПутевойЛист.СоздатьДокумент();
				НовыйДокумент.Водитель		= ТекСтрока.Водитель;
				НовыйДокумент.Автомобиль	= ТекСтрока.Водитель.Автомобиль;
				НовыйДокумент.Дата 			= Дата;
			Иначе
				НовыйДокумент = НайденныеПутевыеЛисты[0].Ссылка.ПолучитьОбъект();
				Сообщить("Путевой Лист на Водителя-"+ТекСтрока.Водитель+" на дату "+Формат(Дата,"ДФ=dd.MM.yyyy")+" уже есть. Удалите существующий или используйте редактирование.");
				Возврат;
			КонецЕсли;
			
			//Заполняем ТЧ Документа
			НовыйДокумент.Данные.Очистить();
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НоваяСтрока = НовыйДокумент.Данные.Добавить();
				НоваяСтрока.Контрагент			= НайденнаяСтрока.Контрагент;
				НоваяСтрока.ДокументПрихода 	= НайденнаяСтрока.ДокументПрихода;
				НоваяСтрока.МестоОтгрузки		= НайденнаяСтрока.МестоОтгрузки;
				НоваяСтрока.КоличествоКоробок	= НайденнаяСтрока.КоличествоКоробок;
				НоваяСтрока.Вес					= НайденнаяСтрока.Вес;
				НоваяСтрока.Объем				= НайденнаяСтрока.Объем;
			КонецЦикла;
			//Попытка
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			//Изменяем БЯС - ставим путевые листы
			//Для Каждого стр_ТЧ из НовыйДокумент.Данные Цикл
			//	докБЯС=стр_ТЧ.ДокументПрихода.ПолучитьОбъект();
			//	докБЯС.ПутевойЛист=НовыйДокумент.Ссылка;
			//	докБЯС.Записать(РежимЗаписиДокумента.Запись);
			//	//Сообщить(докБЯС);
			//КонецЦикла;
			Сообщить("Создан путевой лист для "+ТекСтрока.Водитель);
			//Исключение
			//КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьТаблицуКлиентов();
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеТоваровВодительПриИзменении(Элемент)
	ТекущиеДанные = Элементы.РаспределениеТоваров.ТекущиеДанные;
	
	НайденныеКонтрагенты = РаспределениеТоваров.НайтиСтроки(Новый Структура("Контрагент", ТекущиеДанные.Контрагент));
	Если Не НайденныеКонтрагенты.Количество() = 0 Тогда
		Для Каждого ТекСтрока Из НайденныеКонтрагенты Цикл
			ТекСтрока.Водитель = ТекущиеДанные.Водитель;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПутевыеЛисты(Команда)
	
	Если Вопрос("Загрузить путевые листы за "+ Дата, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	ЗагрузитьПутевыеЛистыНаСервере();
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьПутевыеЛистыНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПутевыеЛистыОстатки.Водитель,
	|	ПутевыеЛистыОстатки.МестоОтгрузки,
	|	ПутевыеЛистыОстатки.Контрагент КАК Контрагент,
	|	ПутевыеЛистыОстатки.ДокументПрихода,
	|	ПутевыеЛистыОстатки.ВесОстаток КАК Вес,
	|	ПутевыеЛистыОстатки.КоличествоКоробокОстаток КАК КоличествоКоробок,
	|	ПутевыеЛистыОстатки.ОбъемОстаток КАК Объем,
	|	ПутевыеЛистыОстатки.ПутевойЛист
	|ИЗ
	|	РегистрНакопления.ПутевыеЛисты.Остатки(, ) КАК ПутевыеЛистыОстатки
	|ГДЕ
	|	ПутевыеЛистыОстатки.ПутевойЛист.Дата = &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	Запрос.УстановитьПараметр("Дата",НачалоДня(Дата));
	
	РаспределениеТоваров.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура ОтредактироватьПутевыеЛисты(Команда)
	
	Если Вопрос("Изменить загруженные путевые листы за"+ Дата, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	ОтредактироватьПутевыеЛистыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтредактироватьПутевыеЛистыНаСервере()
	ТаблицаКлиентов = РаспределениеТоваров.Выгрузить();
	ТЗпутевыеЛисты=ТаблицаКлиентов.Скопировать();
	ТЗпутевыеЛисты.Свернуть("ПутевойЛист");
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ПутевыеЛистыОстатки.ПутевойЛист
	//|ИЗ
	//|	РегистрНакопления.ПутевыеЛисты.Остатки(, ) КАК ПутевыеЛистыОстатки";
	
	
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	Для Каждого Выборка Из ТЗпутевыеЛисты Цикл
		//НайденныеДанные = ТаблицаКлиентов.НайтиСтроки(Новый Структура("Водитель", Выборка.ПутевойЛист.Водитель));
		НайденныеДанные = ТаблицаКлиентов.НайтиСтроки(Новый Структура("ПутевойЛист", Выборка.ПутевойЛист));
		
		Если Не НайденныеДанные.Количество() = 0 Тогда
			мОбъект = Выборка.ПутевойЛист.ПолучитьОбъект();
			мОбъект.Водитель=НайденныеДанные[0].Водитель;
			мОбъект.Данные.Очистить();
			Для Каждого ТекСтрока Из НайденныеДанные Цикл
				
				НоваяСтрока = мОбъект.Данные.Добавить();
				НоваяСтрока.Контрагент			= ТекСтрока.Контрагент;
				НоваяСтрока.МестоОтгрузки 		= ТекСтрока.МестоОтгрузки;
				НоваяСтрока.КоличествоКоробок	= ТекСтрока.КоличествоКоробок;
				НоваяСтрока.Вес					= ТекСтрока.Вес;
				НоваяСтрока.Объем				= ТекСтрока.Объем;
				НоваяСтрока.ДокументПрихода		= ТекСтрока.ДокументПрихода;
			КонецЦикла;
			мОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	Если Вопрос("Распечатать путевые листы за "+ Дата, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	
	ТабличныйДокумент = ПечатьПутевыеЛисты(Дата);
	Если ТабличныйДокумент <> Неопределено Тогда
		ТабличныйДокумент.Показать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьПутевыеЛисты(Дата);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПутевойЛист.Ссылка
	|ИЗ
	|	Документ.ПутевойЛист КАК ПутевойЛист
	|ГДЕ
	|	ПутевойЛист.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПутевойЛист.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ЛистПоСчету = 0;
	
	Пока Выборка.Следующий() Цикл
		ЛистПоСчету = ЛистПоСчету + 1;
		
		Макет = Обработки.АРМСтаршийВодитель.ПолучитьМакет("МакетПутевойЛист");
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Номер = Выборка.Ссылка.Номер;
		Область.Параметры.Дата	= Формат(Дата, "ДФ=dd.MM.yyyy");
		Область.Параметры.Водитель = Выборка.Ссылка.Водитель;
		Область.Параметры.Автомобиль = Выборка.Ссылка.Автомобиль;
		
		//****************ШТРИХКОД********************************
		ШКПутевогоЛиста=Справочники.ПрефиксыОбъектовДляШтрихкодов.ПутевойЛист.Наименование+Строка(Выборка.Ссылка.Номер);
		КартинкаШтрихкода =ОбщийМодуль_Каштан.ПолучитьКартинкуШтрихкода(ШКПутевогоЛиста, 50, 45);
		Если НЕ КартинкаШтрихкода = Неопределено Тогда
			Рисунок				= Область.Область("ШК1");
			Рисунок.Картинка	= КартинкаШтрихкода;
		КонецЕсли; 	
		//********************************************************
		
		
		ТабличныйДокумент.Вывести(Область);
		
		НомерПП = 1;
		
		
		Для Каждого ТекСтрока Из Выборка.Ссылка.Данные Цикл
			Область = Макет.ПолучитьОбласть("Контрагент");
			Область.Параметры.НомерПП			= НомерПП;
			Область.Параметры.Контрагент 		= ТекСтрока.Контрагент;
			Область.Параметры.МестоОтгрузки		= ТекСтрока.МестоОтгрузки;
			Область.Параметры.Вес				= ТекСтрока.Вес;
			Область.Параметры.Объем				= ТекСтрока.Объем;
			Область.Параметры.КоличествоКоробок	= ТекСтрока.КоличествоКоробок;
			Подразделение = ТекСтрока.ДокументПрихода.Организация;
			
			Если Лев(Подразделение, 1) = "А" Тогда
				Область.Параметры.Подразделение = "А";	
			Иначе
				Область.Параметры.Подразделение = "Н";
			КонецЕсли;
			
			
			
			
			КопияДанные = ТекСтрока.ДокументПрихода.ДокументыРасхода.Выгрузить();
			КопияДанные.Свернуть("Комментарий",);
			
			Если КопияДанные.Количество() > 1 Тогда
				сКомментарий = "";
				Для Каждого Комментарий Из ТекСтрока.ДокументПрихода.ДокументыРасхода Цикл
					сКомментарий = сКомментарий + " " + Строка(Комментарий.СчетФ) + " " + Строка(Комментарий.Комментарий) + " ";  		
				КонецЦикла;
				Область.Параметры.Комментарий = СокрЛП(сКомментарий);	
			Иначе
				Попытка
					Область.Параметры.Комментарий = КопияДанные[0].Комментарий;	
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			// Направление
			//Если ТекСтрока.ДокументПрихода.Город Тогда
			//	Направление="Город";
			//Иначе
			//	Направление="Область";	
			//КонецЕсли;
			//Область.Параметры.Направление=Направление;
			
			
			ТабличныйДокумент.Вывести(Область);
			НомерПП = НомерПП + 1;
		КонецЦикла;
		
		КолСтрок=25; //Кол строк в таблице путевого листа
		
		Если НомерПП < КолСтрок Тогда
			Пока НомерПП < КолСтрок Цикл
				НомерПП = НомерПП + 1;
				Область = Макет.ПолучитьОбласть("Контрагент");
				Область.Параметры.НомерПП	= НомерПП;
				ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.КоличествоКоробок	= Выборка.Ссылка.Данные.Итог("КоличествоКоробок");
		Область.Параметры.Вес				= Выборка.Ссылка.Данные.Итог("Вес");
		Область.Параметры.Объем				= Выборка.Ссылка.Данные.Итог("Объем");
		ТабличныйДокумент.Вывести(Область);
		
		Если ЛистПоСчету = 2 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЛистПоСчету = 0;
		КонецЕсли;
		
	КонецЦикла;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОтображатьСетку		= Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки	= Ложь;
	Возврат ТабличныйДокумент;
КонецФункции

&НаКлиенте
Процедура РаспределениеТоваровВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора=ПолучитьФорму("Обработка.АРМСтаршийВодитель.Форма.ФормаВыбораВодителя",,Элемент);
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	ЗаполнитьТаблицуКлиентов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПутевыеЛисты(Команда)
	Попытка
		ПутевыеЛисты.Параметры.УстановитьЗначениеПараметра("Дата",ДатаПутевогоЛиста);	
		Элементы.ПутевыеЛисты.НачальноеОтображениеСписка=НачальноеОтображениеСписка.Начало;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьВыделенныеПутевыеЛисты(Команда)
	
	масСсылок=Элементы.ПутевыеЛисты.ВыделенныеСтроки;
	
	ТабличныйДокумент = ПечататьВыделенныеПутевыеЛистыСЕРВЕР(масСсылок);
	Если ТабличныйДокумент <> Неопределено Тогда
		ТабличныйДокумент.Показать();
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ПечататьВыделенныеПутевыеЛистыСЕРВЕР(масСсылок)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	
	ЛистПоСчету = 0;
	
	Для Каждого Выборка из масСсылок Цикл
		ЛистПоСчету = ЛистПоСчету + 1;
		
		Макет = Обработки.АРМСтаршийВодитель.ПолучитьМакет("МакетПутевойЛист");
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Номер = Выборка.Ссылка.Номер;
		Область.Параметры.Дата	= Формат(Дата, "ДФ=dd.MM.yyyy");
		Область.Параметры.Водитель = Выборка.Ссылка.Водитель;
		Область.Параметры.Автомобиль = Выборка.Ссылка.Автомобиль;
		
		//****************ШТРИХКОД********************************
		ШКПутевогоЛиста=Справочники.ПрефиксыОбъектовДляШтрихкодов.ПутевойЛист.Наименование+Строка(Выборка.Ссылка.Номер);
		КартинкаШтрихкода =ОбщийМодуль_Каштан.ПолучитьКартинкуШтрихкода(ШКПутевогоЛиста, 50, 45);
		Если НЕ КартинкаШтрихкода = Неопределено Тогда
			Рисунок				= Область.Область("ШК1");
			Рисунок.Картинка	= КартинкаШтрихкода;
		КонецЕсли; 	
		//********************************************************
		
		
		ТабличныйДокумент.Вывести(Область);
		
		НомерПП = 1;
		
		
		Для Каждого ТекСтрока Из Выборка.Ссылка.Данные Цикл
			Область = Макет.ПолучитьОбласть("Контрагент");
			Область.Параметры.НомерПП			= НомерПП;
			Область.Параметры.Контрагент 		= ТекСтрока.Контрагент;
			Область.Параметры.МестоОтгрузки		= ТекСтрока.МестоОтгрузки;
			Область.Параметры.Вес				= ТекСтрока.Вес;
			Область.Параметры.Объем				= ТекСтрока.Объем;
			Область.Параметры.КоличествоКоробок	= ТекСтрока.КоличествоКоробок;
			Подразделение = ТекСтрока.ДокументПрихода.Организация;
			
			Если Лев(Подразделение, 1) = "А" Тогда
				Область.Параметры.Подразделение = "А";	
			Иначе
				Область.Параметры.Подразделение = "Н";
			КонецЕсли;
			
			
			
			
			КопияДанные = ТекСтрока.ДокументПрихода.ДокументыРасхода.Выгрузить();
			КопияДанные.Свернуть("Комментарий",);
			
			Если КопияДанные.Количество() > 1 Тогда
				сКомментарий = "";
				Для Каждого Комментарий Из ТекСтрока.ДокументПрихода.ДокументыРасхода Цикл
					сКомментарий = сКомментарий + " " + Строка(Комментарий.СчетФ) + " " + Строка(Комментарий.Комментарий) + " ";  		
				КонецЦикла;
				Область.Параметры.Комментарий = СокрЛП(сКомментарий);	
			Иначе
				Попытка
					Область.Параметры.Комментарий = КопияДанные[0].Комментарий;	
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			// Направление
			//Если ТекСтрока.ДокументПрихода.Город Тогда
			//	Направление="Город";
			//Иначе
			//	Направление="Область";	
			//КонецЕсли;
			//Область.Параметры.Направление=Направление;
			
			
			ТабличныйДокумент.Вывести(Область);
			НомерПП = НомерПП + 1;
		КонецЦикла;
		
		КолСтрок=25; //Кол строк в таблице путевого листа
		
		Если НомерПП < КолСтрок Тогда
			Пока НомерПП < КолСтрок Цикл
				НомерПП = НомерПП + 1;
				Область = Макет.ПолучитьОбласть("Контрагент");
				Область.Параметры.НомерПП	= НомерПП;
				ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.КоличествоКоробок	= Выборка.Ссылка.Данные.Итог("КоличествоКоробок");
		Область.Параметры.Вес				= Выборка.Ссылка.Данные.Итог("Вес");
		Область.Параметры.Объем				= Выборка.Ссылка.Данные.Итог("Объем");
		ТабличныйДокумент.Вывести(Область);
		
		Если ЛистПоСчету = 2 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЛистПоСчету = 0;
		КонецЕсли;
		
	КонецЦикла;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОтображатьСетку		= Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки	= Ложь;
	Возврат ТабличныйДокумент;
	
	
КонецФункции

&НаКлиенте
Процедура ПоказатьДопПанель(Команда)
	
	Если Элементы.ДопПанель.Видимость=Ложь Тогда
		Элементы.ДопПанель.Видимость=Истина;
	Иначе
		Элементы.ДопПанель.Видимость=Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Элементы.ДопПанель.Видимость=Ложь;
	Элементы.СтраницыЗоныОтгрузки.ТекущаяСтраница=Элементы.СтраницаОсновнаяЗона;
	ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона";
	//Элементы.СтраницыЗоныОтгрузки.ТекущаяСтраница=Элементы.СтраницаЗонаВозврата;
КонецПроцедуры


&НаКлиенте
Процедура СписокВодителейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;		
	
	//Определяем список контрагентов
	Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
		масСтрок=Элементы.РаспределениеТоваров.ВыделенныеСтроки;
	ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
		масСтрок=Элементы.РаспределениеТоваровОтстойник.ВыделенныеСтроки;
  	КонецЕсли;

	
	Если масСтрок.Количество()=0 Тогда
		Сообщить("Не выбраны места отгрузки(Клиенты)");
		Возврат;	
	КонецЕсли;
	
	//Устанавливаем Водителя
	ВыбранныйВодитель=ВыбраннаяСтрока.Ссылка;
	
	Для Каждого эл_масСтрок Из масСтрок Цикл
		
		Если ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона" Тогда
		выбраннаяСтрока=Элементы.РаспределениеТоваров.ДанныеСтроки(эл_масСтрок);
		НайденныеКонтрагенты = РаспределениеТоваров.НайтиСтроки(Новый Структура("Контрагент", выбраннаяСтрока.Контрагент));
        ИначеЕсли ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата"  Тогда
			выбраннаяСтрока=Элементы.РаспределениеТоваровОтстойник.ДанныеСтроки(эл_масСтрок);
			НайденныеКонтрагенты = РаспределениеТоваровОтстойник.НайтиСтроки(Новый Структура("Контрагент", выбраннаяСтрока.Контрагент));
   		КонецЕсли;
		
		Если Не НайденныеКонтрагенты.Количество() = 0 Тогда
			Для Каждого ТекСтрока Из НайденныеКонтрагенты Цикл
				ТекСтрока.Водитель = ВыбранныйВодитель;
			КонецЦикла;
		КонецЕсли;
		//выбраннаяСтрока.Водитель=ВыбранныйВодитель;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПутевыеЛисты_2(Команда)
	ПутевыеЛисты_2.Параметры.УстановитьЗначениеПараметра("Дата",ЭтаФорма.Дата);
	
	//Элементы.ПутевыеЛисты_2.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ПутевыеЛисты_2ДанныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ РедактироватьПутевыеЛисты Тогда
		Сообщить("Редактирование не разрешено.");
		Возврат;	
	КонецЕсли;
	строкаТЧ=Элементы.ПутевыеЛисты_2Данные.ТекущаяСтрока;
	ДокПутевойЛист=Элементы.ПутевыеЛисты_2.ТекущиеДанные.Ссылка;
	
	//Сообщить(ДокПутевойЛист);
	//Сообщить(строкаТЧ);
	
	РедактироватьПутевойЛистСЕРВЕР(ДокПутевойЛист,,строкаТЧ,"Удаление");
	
	ОбновитьПутевыеЛисты_2(NULL);
	ЗаполнитьТаблицуКлиентов(); 
КонецПроцедуры


&НаКлиенте
Процедура РаспределениеТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ РедактироватьПутевыеЛисты Тогда
		//Сообщить("Редактирование не разрешено.");
		Возврат;	
	КонецЕсли;
	Попытка
		ДокБЯС=Элементы.РаспределениеТоваров.ТекущиеДанные.ДокументПрихода;
		ДокПутевойЛист=Элементы.ПутевыеЛисты_2.ТекущиеДанные.Ссылка;
	Исключение
	КонецПопытки;
	
	Если  ДокПутевойЛист=Неопределено Тогда
		Сообщить("ПутевойЛист не выбран.");	
		Возврат;
	КонецЕсли;
	
	//Сообщить(ДокПутевойЛист);
	//Сообщить(ДокБЯС);
	РедактироватьПутевойЛистСЕРВЕР(ДокПутевойЛист,ДокБЯС,,"Добавление");
	
	ОбновитьПутевыеЛисты_2(NULL);
	ЗаполнитьТаблицуКлиентов(); 
	
	
КонецПроцедуры

&НаСервере
Процедура РедактироватьПутевойЛистСЕРВЕР(ДокПутевойЛист,докБЯС,строкаТЧ,Признак)
	//-------------- УДАЛЕНИЕ ------------------------
	Если Признак="Удаление" Тогда
		Док=ДокПутевойЛист.ПолучитьОбъект();
		//Док=Документы.ПутевойЛист.НайтиПоНомеру(1).ПолучитьОбъект();
		//Ищем документ прихода БЯС
		//Берем строку
		докБЯС=Док.Данные[строкаТЧ].ДокументПрихода;
		//удаляем все БЯС
		
		масСтрок=Док.Данные.НайтиСтроки(Новый Структура("ДокументПрихода",докБЯС));
		Для Каждого эл_масСтрок из масСтрок Цикл
			Док.Данные.Удалить(эл_масСтрок);
		КонецЦикла;
		
		Док.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;
	//-------------- ДОБАВЛЕНИЕ --------------------
	Если Признак="Добавление" Тогда
		Док=ДокПутевойЛист.ПолучитьОбъект();
		//Док=Документы.ПутевойЛист.НайтиПоНомеру(1).ПолучитьОбъект();
		//Добавляем ТЧ
		Для Каждого стр_ТЧБЯС Из ДокБЯС.МестаОтгрузки Цикл
			МестоОтгрузки=стр_ТЧБЯС.МестоОтгрузки;
			КолКоробок=стр_ТЧБЯС.КоличествоКоробок;
			
			новаяСтрока=Док.Данные.Добавить();
			новаяСтрока.МестоОтгрузки=МестоОтгрузки;
			новаяСтрока.КоличествоКоробок=КолКоробок;
			новаяСтрока.ДокументПрихода=докБЯС;
			новаяСтрока.Контрагент=докБЯС.Получатель;
			
		КонецЦикла;
		Док.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтраницыЗоныОтгрузкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.СтраницыЗоныОтгрузки.ТекущаяСтраница=Элементы.СтраницаОсновнаяЗона Тогда
		ЭтаФорма.ЗонаОтгрузки="ОсновнаяЗона";
	ИначеЕсли Элементы.СтраницыЗоныОтгрузки.ТекущаяСтраница=Элементы.СтраницаЗонаВозврата Тогда
		ЭтаФорма.ЗонаОтгрузки="ЗонаВозврата";
	КонецЕсли;
	//ЗаполнитьТаблицуКлиентов();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОстаткиЗонаВозврата(Команда)
	ЗаполнитьТаблицуКлиентов();
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеТоваровОтстойникВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если НЕ РедактироватьПутевыеЛисты Тогда
		//Сообщить("Редактирование не разрешено.");
		Возврат;	
	КонецЕсли;
	Попытка
		ДокБЯС=Элементы.РаспределениеТоваровОтстойник.ТекущиеДанные.ДокументПрихода;
		ДокПутевойЛист=Элементы.ПутевыеЛисты_2.ТекущиеДанные.Ссылка;
	Исключение
	КонецПопытки;
	
	Если  ДокПутевойЛист=Неопределено Тогда
		Сообщить("ПутевойЛист не выбран.");	
		Возврат;
	КонецЕсли;
	
	РедактироватьПутевойЛистСЕРВЕР(ДокПутевойЛист,ДокБЯС,,"Добавление");
	
	ОбновитьПутевыеЛисты_2(NULL);
	ЗаполнитьТаблицуКлиентов(); 

КонецПроцедуры


 &НаСервере
 Функция НаличиеВозвратныхСчетФвЗонеОтгрузки()
	 
	 //1.Определяем КонтрАгентов в Зоне Отгрузки
	    ТаблицаКонтрагентов = РаспределениеТоваров.Выгрузить();
        ТаблицаКонтрагентов.Свернуть("Контрагент");
		масКонтрагентов=ТаблицаКонтрагентов.ВыгрузитьКолонку("Контрагент");
		
	 
	 //2. Ищем Этих Контрагентов Из СчетФ не принятых СтаршимВодителем но принятых Диспетчером
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратнаяСчетФактура.НомерСчетфактуры,
		|	ВозвратнаяСчетФактура.Контрагент
		|ИЗ
		|	Документ.ВозвратнаяСчетФактура КАК ВозвратнаяСчетФактура
		|ГДЕ
		|	ВозвратнаяСчетФактура.Контрагент В(&Контрагент)
		|	И ВозвратнаяСчетФактура.ДВПриемаСтаршимВодителем = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	И ВозвратнаяСчетФактура.ДВПриемаДиспетчером <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";

	Запрос.УстановитьПараметр("Контрагент", масКонтрагентов);

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда   //Если не то возврат Ложь;
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	НеПринятыеВозвратныеСчетаФ="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НеПринятыеВозвратныеСчетаФ=НеПринятыеВозвратныеСчетаФ +"  "+ ВыборкаДетальныеЗаписи.НомерСчетфактуры;
		
	КонецЦикла;
 	 
	 //3. Если есть - выводим их список и - Наличие -  ИСТИНА
	 Сообщить("Не Принятые СчетФ - "+НеПринятыеВозвратныеСчетаФ);
	 Возврат Истина;	 
 КонецФункции


&НаКлиенте
 Процедура ПроверитьНаличиеВозвратныхСФ(Команда)
	//Проверить Наличие Возвратных СчетФ
	Если НаличиеВозвратныхСчетФвЗонеОтгрузки() Тогда
		Предупреждение("Есть возвратные СчетФактуры в зоне отгрузки. Перед созданием путевых листов выполните их приемку.");
		Возврат;
	Иначе
		Предупреждение("Нет Возвратных СчетФактуры в зоне отгрузки.");
	КонецЕсли;
 КонецПроцедуры
 