
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьЗначение(Элементы.Список.ТекущиеДанные.ДокументПрихода);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	//НаименованиеМестаОтгрузки=Параметры.НаименованиеМестаОтгрузки;
	//Если Параметры.НаименованиеМестаОтгрузки="Ж4" Тогда
	//	НаименованиеМестаОтгрузки="Палет";	
	//КонецЕсли;
	//
	Если ИмяПользователя()= "НФС" Тогда
		Организация="НФС";
	ИначеЕсли ИмяПользователя()= "АСК" Тогда
		Организация="АСКЛЕПИЙ";	
	Иначе
		Организация="ВСЕ ОРГАНИЗАЦИИ";
	КонецЕсли;
	
	ОбновитьСписок();
	КонецПроцедуры


&НаКлиенте
Процедура СписатьТоварСЗоныОтгрузки(Команда)
	Если Вопрос("Списать выбранные товары с зоны отгрузки?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	масСтрок=Элементы.Список.ВыделенныеСтроки;
	Для Каждого идСтроки Из масСтрок Цикл
		//Сообщить(идСтроки);
		СписатьТоварСЗоныОтгрузкиСЕРВЕР(Элементы.Список.ДанныеСтроки(идСтроки).ДокументПрихода,Элементы.Список.ДанныеСтроки(идСтроки).КоличествоКоробокОстаток,Элементы.Список.ДанныеСтроки(идСтроки).НомерМестаОтгрузки);
		Сообщить("Документ - "+Элементы.Список.ДанныеСтроки(идСтроки).ДокументПрихода+" - Списан.");
	КонецЦикла;
	Элементы.Список.Обновить();	
КонецПроцедуры

&НаСервере
Процедура  СписатьТоварСЗоныОтгрузкиСЕРВЕР(ДокБЯС,КолКоробокСписания,МестоОтгрузки)
	
			

	новыйДок=Документы.СписаниеТовараСЗоныОтгрузки.СоздатьДокумент();
	новыйДок.ДокументБЯС=ДокБЯС;
	новыйДок.Дата=ТекущаяДата();
	новыйДок.МестоОтгрузки=МестоОтгрузки;
	новыйДок.КолКоробок=КолКоробокСписания;
	новыйДок.Записать(РежимЗаписиДокумента.Проведение);
	Сообщить("Документ СФ-"+ДокБЯС.номераСФ+" списан(ы)");
	
КонецПроцедуры

&НаКлиенте
Процедура ПродлитьХранениеВЗонеОтгрузки(Команда)
	 Если Вопрос("Продлить хранение выбранных товаров в зоне отгрузки?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	масСтрок=Элементы.Список.ВыделенныеСтроки;
	Для Каждого идСтроки Из масСтрок Цикл
		//Сообщить(идСтроки);
		ПродлитьХранениеВЗонеОтгрузкиСЕРВЕР(Элементы.Список.ДанныеСтроки(идСтроки).ДокументПрихода);
		Сообщить("Документ - "+Элементы.Список.ДанныеСтроки(идСтроки).ДокументПрихода+" - Продлен.");
	КонецЦикла;

	//ПродлитьХранениеВЗонеОтгрузкиСЕРВЕР(Элементы.Список.ТекущиеДанные.ДокументПрихода);
	Элементы.Список.Обновить();	
КонецПроцедуры

&НаСервере
Процедура  ПродлитьХранениеВЗонеОтгрузкиСЕРВЕР(докБЯС)
	  док=докБЯС.ПолучитьОбъект();
	  //док.Отладка= док.Отладка+" Продлено-НачалоОтгрузки-"+док.НачалоОтгрузки;
	  док.НачалоОтгрузки=ТекущаяДата();
	   док.Записать();
	  Сообщить("Начало отгрузки изменено на - "+ТекущаяДата());
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьСписаниеТовара(Команда)
	Если Вопрос("Отменить списание выбранных товаров с зоны отгрузки?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	масСтрок=Элементы.Список.ВыделенныеСтроки;
	Для Каждого идСтроки Из масСтрок Цикл
		//Сообщить(идСтроки);
		ОтменитьСписаниеТовараСЕРВЕР(Элементы.Список.ДанныеСтроки(идСтроки).ДокументПрихода);
	КонецЦикла;
	Элементы.Список.Обновить();	

КонецПроцедуры

&НаСервере
Процедура ОтменитьСписаниеТовараСЕРВЕР(ДокБЯС)
	Если  Не ЗначениеЗаполнено(ДокБЯС.ДокументСписания) Тогда
		Сообщить("Отменять нечего-Документ не списывался.");
		Возврат;
	КонецЕсли;
	
	ДокБЯСобъект=ДокБЯС.ПолучитьОбъект();
	ДокСписания=ДокБЯС.ДокументСписания.ПолучитьОбъект();
	//ДокСписания=Документы.БольшаяЯчеистаяСборка.НайтиПоНомеру(1).ПолучитьОбъект();
	ДокСписания.УстановитьПометкуУдаления(Истина);
	ДокСписания.Записать();
	
	ДокБЯСобъект.ДокументСписания="";
	ДокБЯСобъект.Списан=Ложь;
	ДокБЯСобъект.Записать();
	Сообщить("Документ - "+ДокБЯС+" - Списание отменено.");
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьСписокДляИнвентаризацииЗоныОтгрузки(Команда)
	
	ТабДок=Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	СписокОрганизаций=Новый Массив;
	Если Организация="НФС" Тогда
		СписокОрганизаций.Добавить("НФС");
	ИначеЕсли Организация="АСКЛЕПИЙ" Тогда
		СписокОрганизаций.Добавить("Асклепий");
	Иначе
		СписокОрганизаций.Добавить("НФС");
		СписокОрганизаций.Добавить("Асклепий");
	КонецЕсли;

	модСерверПолныеПрава.ПолучитьСписокДляИнвентаризацииЗоныОтгрузкиСЕРВЕР(ТабДок,СписокОрганизаций,Организация);
	ТабДок.Показать("Инвентаризация зоны отгрузки");
КонецПроцедуры

//&НаСервере 
//Процедура ПолучитьСписокДляИнвентаризацииЗоныОтгрузкиСЕРВЕР(ТабДок,СписокОрганизаций)
//	
//		
//	Запрос = Новый Запрос;
//	Запрос.Текст="ВЫБРАТЬ
//				 |	ЗонаОтгрузкиОстатки.ДокументПрихода,
//				 |	ЗонаОтгрузкиОстатки.НомерМестаОтгрузки КАК НомерМестаОтгрузки,
//				 |	ЗонаОтгрузкиОстатки.КоличествоКоробокОстаток,
//				 |	РАЗНОСТЬДАТ(ЗонаОтгрузкиОстатки.ДокументПрихода.НачалоОтгрузки, &ТекущаяДата, ЧАС) КАК ИнтервалПростоя,
//				 |	ЗонаОтгрузкиОстатки.ДокументПрихода.ПутевойЛист КАК ПутевойЛист
//				 |ИЗ
//				 |	РегистрНакопления.ЗонаОтгрузки.Остатки(
//				 |			,
//				 |			НомерМестаОтгрузки.Палет = ЛОЖЬ
//				 |				И ДокументПрихода.Организация В (&СписокОрганизаций)) КАК ЗонаОтгрузкиОстатки
//				 |
//				 |УПОРЯДОЧИТЬ ПО
//				 |	ЗонаОтгрузкиОстатки.НомерМестаОтгрузки.Наименование";
//				 
//	Запрос.УстановитьПараметр("СписокОрганизаций",СписокОрганизаций);
//	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());

//	Выборка=Запрос.Выполнить().Выбрать();
//	
//	Макет=Обработки.ЗонаОтгрузки.ПолучитьМакет("МакетИнвентаризацияЗоныОтгрузки");
//	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
//	ОбластьШапка.Параметры.Организация=Организация;
//	ТабДок.Вывести(ОбластьШапка);
//	
//	ОбластьСтрока=Макет.ПолучитьОбласть("Стр");
//	 перН=1;
//	 Пока Выборка.Следующий() Цикл
//		 //НомерПП	Орг	Получатель	НомераСФ	МестоОтгрузки	НачалоОтгрузки	НаОтгрузке		ЕстьПутевойЛист	Водитель
//		 
//		 ОбластьСтрока.Параметры.НомерПП=перН;
//		 ОбластьСтрока.Параметры.Орг=Выборка.ДокументПрихода.Организация;
//		 ОбластьСтрока.Параметры.Получатель=Выборка.ДокументПрихода.Получатель;
//		 ОбластьСтрока.Параметры.НомераСФ=Выборка.ДокументПрихода.НомераСФ;
//		 ОбластьСтрока.Параметры.МестоОтгрузки=Выборка.НомерМестаОтгрузки;
//		 ОбластьСтрока.Параметры.НачалоОтгрузки=Выборка.ДокументПрихода.НачалоОтгрузки;
//		 ОбластьСтрока.Параметры.НаОтгрузке=Выборка.ИнтервалПростоя;
//		 
//		 Если ЗначениеЗаполнено( Выборка.ДокументПрихода.ПутевойЛист) Тогда
//			 ОбластьСтрока.Параметры.ЕстьПутевойЛист="ПЛ";
//			 ОбластьСтрока.Параметры.Водитель=Выборка.ДокументПрихода.ПутевойЛист.Водитель;
//		 КонецЕсли;
//		 
//		 перН=перН+1;
//		 ТабДок.Вывести(ОбластьСтрока);
//	
//	 КонецЦикла;
//	 
//	  
//	 
//КонецПроцедуры

 &НаКлиенте
 Процедура ОбновитьСписок()
	 
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата",ТекущаяДата());
	СписокОрганизаций=Новый Массив;
	Если Организация="НФС" Тогда
		СписокОрганизаций.Добавить("НФС");
	ИначеЕсли Организация="АСКЛЕПИЙ" Тогда
		СписокОрганизаций.Добавить("Асклепий");
	Иначе
		СписокОрганизаций.Добавить("НФС");
		СписокОрганизаций.Добавить("Асклепий");
	КонецЕсли;
//    Список.Параметры.УстановитьЗначениеПараметра("СписокОрганизаций",СписокОрганизаций);

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьСписок() ;
    
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКоличествоМест(Команда)
	СписокОрганизаций=Новый Массив;
	Если Организация="НФС" Тогда
		СписокОрганизаций.Добавить("НФС");
	ИначеЕсли Организация="АСКЛЕПИЙ" Тогда
		СписокОрганизаций.Добавить("Асклепий");
	Иначе
		СписокОрганизаций.Добавить("НФС");
		СписокОрганизаций.Добавить("Асклепий");
	КонецЕсли;
	Предупреждение(ВернутьКоличествоМест(СписокОрганизаций));
КонецПроцедуры

&НаСервере
Функция ВернутьКоличествоМест(Организации)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗонаОтгрузкиОстатки.ДокументПрихода,
		|	ЗонаОтгрузкиОстатки.НомерМестаОтгрузки,
		|	ЗонаОтгрузкиОстатки.КоличествоКоробокОстаток,
		|	ЗонаОтгрузкиОстатки.ДокументПрихода.ПутевойЛист КАК ПутевойЛист
		|ИЗ
		|	РегистрНакопления.ЗонаОтгрузки.Остатки(
		|			,
		|			НомерМестаОтгрузки.Палет = ЛОЖЬ
		|				И ДокументПрихода.Организация В (&СписокОрганизаций)) КАК ЗонаОтгрузкиОстатки";
   //Запрос.УстановитьПараметр("Период",ТекущаяДата());
   Запрос.УстановитьПараметр("СписокОрганизаций",Организации);
   Рез = Запрос.Выполнить().Выгрузить();
   Результат = "Количество строк: "+Строка(Рез.Количество())+", Количество мест: "+Строка(Рез.Итог("КоличествоКоробокОстаток"));
   Возврат Результат;

КонецФункции
