
&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьСЕРВЕР();
КонецПроцедуры

&НаСервере
Процедура  СохранитьСЕРВЕР()
	//Если НЕ МТС тогда
		//1. Проверка На Заполнение полей
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Или
			НЕ ЗначениеЗаполнено(Объект.Дата) Или
			НЕ ЗначениеЗаполнено(Объект.Получатель)Тогда
			Сообщить("ОШИБКА! Заполните необходимые поля и Табличную часть Счет Фактур.");
			Возврат;
		КонецЕсли;
		//1.1 Проверка на Кол Вес Объем
		Для Каждого стр Из Объект.ДокументыРасхода Цикл
			Если стр.Количество	=0 Или
				стр.Сумма	=0 Или 
				стр.Объем	=0 Или 
				стр.КолПозиций	=0 Или 
				стр.Вес	=0 Тогда
				
				Сообщить("ОШИБКА! Заполните необходимые поля в Табличной части Счет Фактур.");
				Возврат;
				
			КонецЕсли;
			
		КонецЦикла;
		
		
		//2. Проверка На Счет Фактуры
		Для Каждого стр_ДокументыРасхода Из Объект.ДокументыРасхода Цикл
			СчетФ=(стр_ДокументыРасхода.СчетФ);
			Если СчетФ="" тогда
				Сообщить("ОШИБКА! Не заполнен номер СчетФактуры.");
				Возврат;	
			КонецЕсли;
			
			поискСФ=модСерверПолныеПрава.НайтиБЯСпоСчетФактуре(СчетФ);
			Если ЗначениеЗаполнено( поискСФ) Тогда
				Сообщить("ОШИБКА! Документ с такой СчетФ-"+СчетФ+" уже существует - " +поискСФ);
				Возврат;	
			КонецЕсли;
		КонецЦикла;
		//3. Проверка На ШК
		Для Каждого стр_ДокументыРасхода Из Объект.ДокументыРасхода Цикл
			докШК=(стр_ДокументыРасхода.СчетФ);	
			Если докШК="" тогда
				Сообщить("ОШИБКА! Не заполнен номер ШК документа.");
				Возврат;	
			КонецЕсли;
			
			поискДок=модСерверПолныеПрава.НайтиДокБЯСпоШК(докШК);
			Если ЗначениеЗаполнено( поискДок) Тогда
				Сообщить("Документ с таким ШК-"+докШК+" уже существует - " +поискДок);
				Возврат;	
			КонецЕсли;
		КонецЦикла;
	//КонецЕсли;
	
	//4. Сохранение документа
	новыйДок=Документы.БольшаяЯчеистаяСборка.СоздатьДокумент();
	новыйДок.Организация=Объект.Организация;
	новыйДок.Направление=Справочники.Направление.НайтиПоКоду("100");
	новыйДок.Получатель=Объект.Получатель;
	новыйДок.Дата=Объект.Дата;
	новыйДок.ДокументыРасхода.Загрузить(Объект.ДокументыРасхода.Выгрузить());
	новыйДок.МестаОтгрузки.Загрузить(Объект.МестаОтгрузки.Выгрузить());
	новыйДок.Коробки=Объект.МестаОтгрузки.Итог("КоличествоКоробок");
	новыйДок.СформированВручную=Истина;
	//новыйДок.НеПоказыватьВСписке=Истина;
	Если новыйДок.Коробки>0 Тогда
		новыйДок.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		новыйДок.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;  
	Если МТС тогда  
		СС=1;
		Для каждого Стр Из новыйДок.ДокументыРасхода Цикл
			Стр.ДокНомер="МТС"+СС+Прав(новыйДок.Номер,5);
			Стр.ШК="MTS"+СС+Прав(новыйДок.Номер,5);
			Стр.СчетФ="МТС"+Строка(СС)+Прав(новыйДок.Номер,5);
			СС=СС+1;
		КонецЦикла; 
		Если новыйДок.Коробки>0 Тогда
			новыйДок.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			новыйДок.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;  
		
	КонецЕсли; 	
	Сообщить("УСПЕШНО! Создан новый документ - " + новыйДок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.Дата=ТекущаяДата();
КонецПроцедуры

&НаКлиенте
 Процедура ВнешнееСобытие(Источник, Событие, Данные)
	 Если НЕ ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		ШК=Лев(Данные,12);
		//Проверяем есть ли в ТЧ такой ШК
		Для Каждого стр из Объект.ДокументыРасхода Цикл
			Если ШК=СокрЛП(стр.ШК) Тогда
				Элементы.ДокументыРасхода.ТекущаяСтрока=(стр.НомерСтроки-1);
				Сообщить("Такой ШК - "+ШК+ " уже есть.");
				Возврат;
			КонецЕсли;
		КонецЦикла;
		//Добавляем новую строку
			струкРезультат=модСерверПолныеПрава.ПолучитьДокументРО_ДельфиПоШК_Вариант2(ШК);
		Если струкРезультат.Результат="Ошибка" Тогда
			Сообщить(струкРезультат.РезультатТекст);
		КонецЕсли;
        
		Если струкРезультат.Результат="Найден" Тогда
			Сообщить(струкРезультат.РезультатТекст);
			новаяСтр=Объект.ДокументыРасхода.Добавить();
			новаяСтр.ШК=ШК;
			новаяСтр.Док=струкРезультат.РезультатТекст;
			новаяСтр.ДокНомер=струкРезультат.НомерРО;
			новаяСтр.СчетФ=струкРезультат.НомерСчетФ;
			новаяСтр.ДатаДокумента=струкРезультат.ДатаДокумента;
			новаяСтр.Комментарий=струкРезультат.Комментарий;
			новаяСтр.Количество=струкРезультат.КоличествоИтог;
			новаяСтр.КолПозиций=струкРезультат.КоличествоПозиций;
		 	новаяСтр.Сумма=струкРезультат.СуммаПоДокументу;

			Объект.Организация=струкРезультат.ОрганизацияПоДокументу;
			Объект.Получатель=струкРезультат.Получатель;
		КонецЕсли;

		
				

	КонецЕсли;
	
 КонецПроцедуры

&НаКлиенте
 Процедура ДокументыРасходаШКПриИзменении(Элемент)
	 
	 ПолучитьДокументПоШК();

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументПоШК()
	
	ШК=Элементы.ДокументыРасхода.ТекущиеДанные.ШК;
	
	струкРезультат=модСерверПолныеПрава.ПолучитьДокументРО_ДельфиПоШК_Вариант2(ШК);
	
	Если струкРезультат.Результат="Ошибка" Тогда
		Сообщить(струкРезультат.РезультатТекст);
	КонецЕсли;
	
	Если струкРезультат.Результат="Найден" Тогда
		Сообщить(струкРезультат.РезультатТекст);
		 Элементы.ДокументыРасхода.ТекущиеДанные.Док=струкРезультат.РезультатТекст;
		 Элементы.ДокументыРасхода.ТекущиеДанные.ДокНомер=струкРезультат.НомерРО;
		 Элементы.ДокументыРасхода.ТекущиеДанные.СчетФ=струкРезультат.НомерСчетФ;
		 Элементы.ДокументыРасхода.ТекущиеДанные.ДатаДокумента=струкРезультат.ДатаДокумента;
		 Элементы.ДокументыРасхода.ТекущиеДанные.Комментарий=струкРезультат.Комментарий;
		 Элементы.ДокументыРасхода.ТекущиеДанные.Количество=струкРезультат.КоличествоИтог;
		 Элементы.ДокументыРасхода.ТекущиеДанные.КолПозиций=струкРезультат.КоличествоПозиций;
		 Элементы.ДокументыРасхода.ТекущиеДанные.Сумма=струкРезультат.СуммаПоДокументу;

		 
		 Объект.Организация=струкРезультат.ОрганизацияПоДокументу;
		 Объект.Получатель=струкРезультат.Получатель;
	КонецЕсли;

	
КонецПроцедуры


&НаКлиенте
Процедура МТСПриИзменении(Элемент)
	Объект.ДокументыРасхода.Очистить();
	Объект.МестаОтгрузки.Очистить();
	Если МТС тогда
		Объект.Организация="НФС";
		новаяСтр=Объект.ДокументыРасхода.Добавить();
		новаяСтр.ШК="MTC";
		новаяСтр.Док="MTC";
		новаяСтр.ДокНомер="MTC";
		новаяСтр.СчетФ="MTC";
		новаяСтр.ДатаДокумента=ТекущаяДата();
		новаяСтр.Комментарий="MTC";
		новаяСтр.Количество=1;
		новаяСтр.КолПозиций=1;
		новаяСтр.Сумма=1;
		новаяСтр.Вес=0.001;
		новаяСтр.Объем=0.001;
		Объект.МестаОтгрузки.Очистить();
		новаяСтр=Объект.МестаОтгрузки.Добавить();
		новаяСтр.МестоОтгрузки=Справочники.МестаХранения.НайтиПоКоду("000000008");
		новаяСтр.КоличествоКоробок=1;
	Иначе
	КонецЕсли;	
КонецПроцедуры

