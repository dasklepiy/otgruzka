
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если РольДоступнаРазработчик() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
				
		
		Для Каждого ТекСтрока Из Объект.ДокументыРасхода Цикл
			Если Не ТекСтрока.Проверен Тогда
				Отказ = Истина;
				ОчиститьСообщения();
				Сообщить("Проверьте все счет-фактуры");
			КонецЕсли;
		КонецЦикла;
		
		Если Объект.МестаОтгрузки.Количество() = 0 Тогда
			Сообщить("Укажите места отгрузки");
		Иначе
			Если Не Объект.МестаОтгрузки.Итог("КоличествоКоробок") = Объект.Коробки Тогда
				Сообщить("Количество коробок к распределению на места отгрузки должно быть равно общему количеству коробок");
			КонецЕсли;
		КонецЕсли;
		
		Если Не Отказ Тогда
			Объект.СписокМестХранений = "";
			
			Для Каждого ТекСтрока Из Объект.ДокументыРасхода Цикл
				Если ЗначениеЗаполнено(ТекСтрока.Комментарий) Тогда
					Объект.Комментарий = Объект.Комментарий + ТекСтрока.СчетФ + " " + ТекСтрока.Комментарий + " ;";
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого ТекСтрока Из Объект.МестаОтгрузки Цикл
				Объект.СписокМестХранений = Объект.СписокМестХранений + " " + ТекСтрока.МестоОтгрузки;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция РольДоступнаРазработчик()
	Возврат РольДоступна("Разработчик");
КонецФункции // РольДоступна()


&НаКлиенте
Процедура ПроверитьСчетФактуры(Команда)
	Для Каждого ТекСтрока Из Объект.ДокументыРасхода Цикл
		ТекСтрока.Проверен = Истина;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если НЕ ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник = "СканерШтрихкода" И Событие = "Barcode" И ЗначениеЗаполнено(Данные) Тогда
		//Если СтрДлина(Данные) = 12 Тогда	
		//	НайденныеСтроки = Объект.ДокументыРасхода.НайтиСтроки(Новый Структура("ШК", Данные));
		//	Если Не НайденныеСтроки.Количество() = 0 Тогда
		//		НайденныеСтроки[0].Проверен = Истина
		//	Иначе
		//		Сообщить("Не найдена счет-фактура №" + Данные);
		//	КонецЕсли;
		//КонецЕсли;
		//Ищем строку с пустым ШК
		НайденныеСтроки=Объект.ДокументыРасхода.НайтиСтроки(Новый Структура("ШК",""));
		Если НайденныеСтроки.Количество()>0 Тогда
		ШК=Лев(Данные,12);
		НайденныеСтроки[0].ШК=ШК;
		Сообщить("Установлен ШК-"+ШК+" для СФ-"+НайденныеСтроки[0].СчетФ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрктуруНаСервере()
	
	Массив = Новый Массив(2);
	Массив.Добавить(1,2);	
	Возврат Массив;
КонецФункции


&НаКлиенте
Процедура МестаОтгрузкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Элемент.ТекущиеДанные.НомерСтроки = 1 И НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КоличествоКоробок = Объект.Коробки;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура МестаОтгрузкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Отказ = Ложь;
	НайденныеСтроки = Объект.МестаОтгрузки.НайтиСтроки(Новый Структура("МестоОтгрузки", Элемент.ТекущиеДанные.МестоОтгрузки));
	Если НайденныеСтроки.Количество() > 1 Тогда
		Сообщить("Место отгрузки " + Элемент.ТекущиеДанные.МестоОтгрузки + " уже указано");
		Элемент.ТекущиеДанные.МестоОтгрузки = "";
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Если Объект.МестаОтгрузки.Итог("КоличествоКоробок") > Объект.Коробки Тогда
			Элемент.ТекущиеДанные.КоличествоКоробок = "";
			Сообщить("Количество коробок к распределению на места отгрузки превышает общее количество коробок");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Не Отказ Тогда
		Объект.СостояниеСборки	= Перечисления.СостояниеСборки.КОтгрузке;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МестаОтгрузкиМестоОтгрузкиПриИзменении(Элемент)
	//ТекущиеДанные = Элементы.МестаОтгрузки.ТекущиеДанные;
	//
	//Отказ = ПолучитьКоличествоМестОтгрузки(ТекущиеДанные.МестоОтгрузки);
	//
	//Если Отказ Тогда
	//	ТекущиеДанные.МестоОтгрузки = "";
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоМестОтгрузки(МестоОтгрузки)
	//Запрос = Новый Запрос;
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ТоварыНаСкладахОстатки.ДокументПрихода КАК ДокументПрихода
	//|ИЗ
	//|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	//|			,
	//|			НомерМестаОтгрузки = &МестоОтгрузки
	//|				И НЕ ДокументПрихода = &ДокументПрихода) КАК ТоварыНаСкладахОстатки";
	//Запрос.УстановитьПараметр("МестоОтгрузки",		МестоОтгрузки);
	//Запрос.УстановитьПараметр("ДокументПрихода",	Объект.Ссылка);
	//ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	//КоличествоМест = ТаблицаДокументов.Количество();
	//
	//НайденныеСтроки = Объект.МестаОтгрузки.НайтиСтроки(Новый Структура("МестоОтгрузки", МестоОтгрузки));
	//Если Не НайденныеСтроки.Количество() = 0 Тогда
	//	КоличествоМест = КоличествоМест + НайденныеСтроки.Количество();	
	//КонецЕсли;
	//
	//Если КоличествоМест > Константы.КоличествоПоддонов.Получить() Тогда
	//	Сообщить("Данное место отгрузки занято");
	//	Возврат Истина;
	//Иначе
	//	Возврат Ложь
	//КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьШК(Команда)
ПолучитьШКСервер();	
  ЭтаФорма.Модифицированность=Истина;
КонецПроцедуры


&НаСервере

Процедура ПолучитьШКСервер()
	//Проверка на ШК
Для Каждого Стр из Объект.ДокументыРасхода Цикл
	
	//Если СокрЛП(Стр.ШК)="" Тогда
		//ПолучитШК  Дельфи	
		//Стр.ШК=модСерверПолныеПрава.ПолучитьШК_Дельфи(СокрЛП(Стр.СчетФ),Объект.Организация);
		Стр.ШК=модСерверПолныеПрава.ПолучитьШК_ДельфиПоНомеруРасходногоОрдера(СокрЛП(Стр.ДокНомер),СокрЛП(Объект.Организация));

	//КонецЕсли;	
	
		
КонецЦикла;
//Если  ВнешниеИсточникиДанных.SRVGLOB.ПолучитьСостояние()=СостояниеВнешнегоИсточникаДанных.Подключен Тогда
//	ВнешниеИсточникиДанных.SRVGLOB.РазорватьСоединение();
//	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазобратьКомплект(Команда)
	РазобратьКомплектСЕРВЕР();
КонецПроцедуры

&НаСервере
Процедура РазобратьКомплектСЕРВЕР()
	//Ищем БЯС
	НачатьТранзакцию();
	Для Каждого стр_ДокументыКомплекта Из Объект.ДокументыКомплекта Цикл
		док_БЯС=стр_ДокументыКомплекта.ДокБЯС.ПолучитьОбъект();
		док_БЯС.ВходитВКомплект =Ложь;
		док_БЯС.КомплектБЯС ="";
		док_БЯС.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	Объект.ДокументыРасхода.Очистить();
	Объект.МестаОтгрузки.Очистить();
	//Объект.ДокументыКомплекта.Очистить();
	Объект.ЭтоКомплект=Ложь;
	Объект.Коробки=0;
	
	ЗафиксироватьТранзакцию();
	Сообщить("ДокументыКомплекта очистите вручную");	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументРОпоШКсДЕЛЬФИ(Команда)
	
	струкРезультат=модСерверПолныеПрава.ПолучитьДокументРО_ДельфиПоШК_Вариант2(Элементы.ДокументыРасхода.ТекущиеДанные.ШК);
	
	Если струкРезультат.Результат="Ошибка" Тогда
		Сообщить(струкРезультат.РезультатТекст);
	КонецЕсли;
	
	Если струкРезультат.Результат="Найден" Тогда
		Сообщить(струкРезультат.РезультатТекст);
		 Элементы.ДокументыРасхода.ТекущиеДанные.Док=струкРезультат.РезультатТекст;
		 Элементы.ДокументыРасхода.ТекущиеДанные.ДокНомер=струкРезультат.НомерРО;
		 Элементы.ДокументыРасхода.ТекущиеДанные.СчетФ=струкРезультат.НомерСчетФ;
		 Элементы.ДокументыРасхода.ТекущиеДанные.ДатаДокумента=струкРезультат.ДатаДокумента;
		 Элементы.ДокументыРасхода.ТекущиеДанные.Комментарий=струкРезультат.Комментарий;
         Элементы.ДокументыРасхода.ТекущиеДанные.Количество=струкРезультат.КоличествоИтог;
		 Элементы.ДокументыРасхода.ТекущиеДанные.КолПозиций=струкРезультат.КоличествоПозиций;
		 Элементы.ДокументыРасхода.ТекущиеДанные.Сумма=струкРезультат.СуммаПоДокументу;
		 
		 ЭтаФорма.Модифицированность=Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИсториюШК(Команда)
	НомерСФ=Элементы.ДокументыРасхода.ТекущиеДанные.СчетФ;
	ДатаСФ=Элементы.ДокументыРасхода.ТекущиеДанные.ДатаДокумента;
	Организация=Объект.Организация;
	
	Если Найти(НомерСФ,"опт")>0 Тогда
		Организация="НФС_ОПТ";
	КонецЕсли;
	Если Найти(НомерСФ,"апт")>0 Тогда
		Организация="НФС_АПТ";
	КонецЕсли;
	Если Организация="Асклепий" Тогда
		Организация="АСК";
	КонецЕсли;
	
	
	
	НомерСФ=СтрЗаменить(НомерСФ,"(опт)","");
	НомерСФ=СтрЗаменить(НомерСФ,"(апт)","");
	
	П=Новый Структура;
	П.Вставить("НомерСФ",НомерСФ);
	П.Вставить("ДатаСФ",ДатаСФ);
	П.Вставить("Организация",Организация);
	ОткрытьФорму("Обработка.ИсторияШКпоНомеруСФиДате.Форма.Форма",П);
	
	

КонецПроцедуры





