//РаботаСВнешнимОборудованием
Перем глПодключаемоеОборудование Экспорт; // для кэширования на клиенте
//Конец РаботаСВнешнимОборудованием


// СтандартныеПодсистемы

// ОбновлениеКонфигурации

// Информация о доступном обновлении конфигурации, обнаруженном в Интернете
// при запуске программы.
Перем ДоступноеОбновлениеКонфигурации Экспорт;
// СписокЗначений для накапливания пакета сообщений в журнал регистрации, 
// формируемых в клиентской бизнес-логике подсистемы.
Перем СообщенияДляЖурналаРегистрации Экспорт; 
// Структура с параметрами помощника обновления конфигурации.
Перем НастройкиОбновленияКонфигурации Экспорт; 

// Конец ОбновлениеКонфигурации

// РаботаСФайлами
Перем КомпонентаTwain Экспорт;			// Twain компонента для работы со сканером
// Конец РаботаСФайлами

// Конец СтандартныеПодсистемы

Перем глКомпонентаОбменаСМобильнымиПриложениями Экспорт;

Перем ДрайверСканераШтрихкодов Экспорт;			// Сканер штрихкодов

Процедура ПередНачаломРаботыСистемы(Отказ) 
	
	// СтандартныеПодсистемы
	
	// ОбновлениеВерсииИБ
	//Отказ = НЕ ОбновлениеИнформационнойБазыКлиент.ВозможноВыполнитьОбновлениеИнформационнойБазы();
	// Конец ОбновлениеВерсииИБ
	
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

Процедура ПриНачалеРаботыСистемы()
		
	ПодключатьСШК = ОбщийМодуль_Каштан.ПодключатьСШКПриЗапускеСистемы();
	Если ПодключатьСШК тогда
		ПОРТ="Не найден.";
		РаботаСТорговымОборудованием.ПодключитьСканерШтрихкодов(ПОРТ);
	КонецЕсли;
		
	
	 ОбщийМодуль_Каштан.УстановитьПК(ИмяКомпьютера());

	 
	 
	 УстановитьЗаголовокПриложения(ПолучитьЗаголовокПриложения()+ " [" + ИмяКомпьютера()+"]["+ИмяПользователя()+"][Сканер-"+ПОРТ);
	 
	 
	 
	 //---- СООБЩЕНИЯ ПОЛЬЗОВАТЕЛЯМ ----------//
	 ПодключитьОбработчикОжидания("ПослатьСообщениеПользователю",60);

	  
	  
		
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ)
	//РежимБлокировки = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ПараметрыБлокировкиСеансов;
	//ТекущееВремя = РежимБлокировки.ТекущаяДатаСеанса;
	//Если РежимБлокировки.Установлена 
	//	 И (НЕ ЗначениеЗаполнено(РежимБлокировки.Начало) ИЛИ ТекущееВремя >= РежимБлокировки.Начало) 
	//	 И (НЕ ЗначениеЗаполнено(РежимБлокировки.Конец) ИЛИ ТекущееВремя <= РежимБлокировки.Конец) Тогда
	//	// Если установлен режим блокировки то независимо от всего завершить работу
	//	Возврат;
	//КонецЕсли;
	//
	//
	//
	//ЗапрашиватьПотверждение = ОбщийМодуль_Каштан.ЗначениеЗапросаЗавершенияПрограммы();	
	//Если ЗапрашиватьПотверждение <> Неопределено Тогда 
	//	Если ЗапрашиватьПотверждение Тогда
			//Ответ = Вопрос("Завершить работу с программой?", РежимДиалогаВопрос.ДаНет);
			//Отказ = (Ответ = КодВозвратаДиалога.Нет);
	//	КонецЕсли;
	//КонецЕсли;
	
	//РаботаСВнешнимОборудованием
	//МенеджерОборудованияКлиент.ПередЗавершениемРаботыСистемы();
	////Конец РаботаСВнешнимОборудованием
	//
	//Если глКомпонентаОбменаСМобильнымиПриложениями <> Неопределено Тогда
	//	Попытка
	//		глКомпонентаОбменаСМобильнымиПриложениями.Отключить(0);
	//		ИмяСобытия = НСтр("ru='Отключил'");
	//		ОбщегоНазначения.ВыполнитьЗаписьВЖурналРегистрации(ИмяСобытия, "Ошибка",,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

	//	Исключение
	//		ИмяСобытия = НСтр("ru='Ошибка при отключении компоненты обмена данными'");
	//		ОбщегоНазначения.ВыполнитьЗаписьВЖурналРегистрации(ИмяСобытия, "Ошибка",,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	//	КонецПопытки;
	//	
	//	глКомпонентаОбменаСМобильнымиПриложениями = Неопределено;
	//КонецЕсли;
	//ДрайверСканераШтрихкодов="";

КонецПроцедуры

// Обработать параметр запуска программы.
// Реализация функции может быть расширена для обработки новых параметров.
//
// Параметры
//  ПараметрЗапуска  – Строка – параметр запуска, переданный в конфигурацию 
//                              с помощью ключа командной строки /C.
//
// Возвращаемое значение:
//   Булево   – Истина, если необходимо прервать выполнение процедуры ПриНачалеРаботыСистемы.
//
//Функция ОбработатьПараметрыЗапуска(Знач ПараметрЗапуска)

	//Перем Результат;
	//Результат = Ложь;
	
	// СтандартныеПодсистемы
	
	// Есть ли параметры запуска
	//Если ПустаяСтрока(ПараметрЗапуска) Тогда
	//	Возврат Результат;
	//КонецЕсли;
	//
	// Параметр может состоять из частей, разделенных символом ";".
	// Первая часть - главное значение параметра запуска. 
	// Наличие дополнительных частей определяется логикой обработки главного параметра.
	//ПараметрыЗапуска = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрЗапуска, ";");
	//ЗначениеПараметраЗапуска = Врег(ПараметрыЗапуска[0]);
	
	// ЗавершениеРаботыПользователей
	//Результат = СоединенияИБКлиент.ОбработатьПараметрыЗапуска(ЗначениеПараметраЗапуска, ПараметрыЗапуска);
	// Конец ЗавершениеРаботыПользователей

	// Конец СтандартныеПодсистемы
	
	// Код конфигурации
	// ...
	// Конец кода конфигурации

	// СтандартныеПодсистемы
	//Возврат Результат;
	// Конец СтандартныеПодсистемы

//КонецФункции

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)

	Если Источник = "СканерШтрихкода" и Событие = "Barcode" и Значениезаполнено(Данные) тогда 	
		//ОбщийМодульКлиент_Каштан.НайтиИОткрытьДокументПоШК(Данные);
	КонецЕсли;

КонецПроцедуры

Процедура РучнойВводШК() Экспорт
	ШК = "";
    ВвестиЗначение(ШК, "Введите ШК");
	ОбщийМодульКлиент_Каштан.НайтиИОткрытьДокументПоШК(ШК);
КонецПроцедуры
